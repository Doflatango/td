// Code generated by gotdgen, DO NOT EDIT.

package td

import (
	"context"
	"fmt"
	"strings"

	"github.com/gotd/td/bin"
)

// No-op definition for keeping imports.
var _ = bin.Buffer{}
var _ = context.Background()
var _ = fmt.Stringer(nil)
var _ = strings.Builder{}

// InvokeWithLayer represents TL type `invokeWithLayer#da9b0d0d`.
//
// See https://localhost:80/doc/constructor/invokeWithLayer for reference.
type InvokeWithLayer struct {
	// Layer field of InvokeWithLayer.
	Layer int
	// Query field of InvokeWithLayer.
	Query bin.Object
}

// InvokeWithLayerTypeID is TL type id of InvokeWithLayer.
const InvokeWithLayerTypeID = 0xda9b0d0d

// String implements fmt.Stringer.
func (i *InvokeWithLayer) String() string {
	if i == nil {
		return "InvokeWithLayer(nil)"
	}
	var sb strings.Builder
	sb.WriteString("InvokeWithLayer")
	sb.WriteString("{\n")
	sb.WriteString("\tLayer: ")
	sb.WriteString(fmt.Sprint(i.Layer))
	sb.WriteString(",\n")
	sb.WriteString("\tQuery: ")
	sb.WriteString(fmt.Sprint(i.Query))
	sb.WriteString(",\n")
	sb.WriteString("}")
	return sb.String()
}

// Encode implements bin.Encoder.
func (i *InvokeWithLayer) Encode(b *bin.Buffer) error {
	if i == nil {
		return fmt.Errorf("can't encode invokeWithLayer#da9b0d0d as nil")
	}
	b.PutID(InvokeWithLayerTypeID)
	b.PutInt(i.Layer)
	if err := i.Query.Encode(b); err != nil {
		return fmt.Errorf("unable to encode invokeWithLayer#da9b0d0d: field query: %w", err)
	}
	return nil
}

// Decode implements bin.Decoder.
func (i *InvokeWithLayer) Decode(b *bin.Buffer) error {
	if i == nil {
		return fmt.Errorf("can't decode invokeWithLayer#da9b0d0d to nil")
	}
	if err := b.ConsumeID(InvokeWithLayerTypeID); err != nil {
		return fmt.Errorf("unable to decode invokeWithLayer#da9b0d0d: %w", err)
	}
	{
		value, err := b.Int()
		if err != nil {
			return fmt.Errorf("unable to decode invokeWithLayer#da9b0d0d: field layer: %w", err)
		}
		i.Layer = value
	}
	{
		if err := i.Query.Decode(b); err != nil {
			return fmt.Errorf("unable to decode invokeWithLayer#da9b0d0d: field query: %w", err)
		}
	}
	return nil
}

// Ensuring interfaces in compile-time for InvokeWithLayer.
var (
	_ bin.Encoder = &InvokeWithLayer{}
	_ bin.Decoder = &InvokeWithLayer{}
)
