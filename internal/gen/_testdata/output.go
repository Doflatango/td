// Code generated by gotdgen, DO NOT EDIT.

package td

import (
	"github.com/ernado/td/internal/bin"
)

// No-op definition for keeping imports.
var _ = bin.Buffer{}

// Int32 represents TL type int32#5cb934fa.
type Int32 struct{}

// Int32TypeID is TL type id of Int32.
const Int32TypeID = 0x5cb934fa

// Encode implements bin.Encoder.
func (i Int32) Encode(b *bin.Buffer) {
	b.PutID(Int32TypeID)
}

var _ bin.Encoder = Int32{}

// String represents TL type string#b5286e24.
type String struct{}

// StringTypeID is TL type id of String.
const StringTypeID = 0xb5286e24

// Encode implements bin.Encoder.
func (s String) Encode(b *bin.Buffer) {
	b.PutID(StringTypeID)
}

var _ bin.Encoder = String{}

// An object of this type can be returned on every function call, in case of an error
type Error struct {
	// Error code; subject to future changes. If the error code is 406, the error message must not be processed in any way and must not be displayed to the user
	Code int32

	// Error message; subject to future changes
	Message string
}

// ErrorTypeID is TL type id of Error.
const ErrorTypeID = 0x9bdd8f1a

// Encode implements bin.Encoder.
func (e Error) Encode(b *bin.Buffer) {
	b.PutID(ErrorTypeID)
	b.PutInt32(e.Code)
	b.PutString(e.Message)
}

var _ bin.Encoder = Error{}

// can be returned by functions as result.
type Ok struct{}

// OkTypeID is TL type id of Ok.
const OkTypeID = 0xd4edbe69

// Encode implements bin.Encoder.
func (o Ok) Encode(b *bin.Buffer) {
	b.PutID(OkTypeID)
}

var _ bin.Encoder = Ok{}

// Message represents TL type message#ec200d96.
type Message struct {
	// Err field of Message.
	Err Error
}

// MessageTypeID is TL type id of Message.
const MessageTypeID = 0xec200d96

// Encode implements bin.Encoder.
func (m Message) Encode(b *bin.Buffer) {
	b.PutID(MessageTypeID)
	m.Err.Encode(b)
}

var _ bin.Encoder = Message{}
