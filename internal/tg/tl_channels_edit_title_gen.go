// Code generated by gotdgen, DO NOT EDIT.

package tg

import (
	"context"
	"fmt"

	"github.com/ernado/td/bin"
)

// No-op definition for keeping imports.
var _ = bin.Buffer{}
var _ = context.Background()
var _ = fmt.Stringer(nil)

// ChannelsEditTitleRequest represents TL type `channels.editTitle#566decd0`.
type ChannelsEditTitleRequest struct {
	// Channel field of ChannelsEditTitleRequest.
	Channel InputChannelClass
	// Title field of ChannelsEditTitleRequest.
	Title string
}

// ChannelsEditTitleRequestTypeID is TL type id of ChannelsEditTitleRequest.
const ChannelsEditTitleRequestTypeID = 0x566decd0

// Encode implements bin.Encoder.
func (e *ChannelsEditTitleRequest) Encode(b *bin.Buffer) error {
	if e == nil {
		return fmt.Errorf("can't encode channels.editTitle#566decd0 as nil")
	}
	b.PutID(ChannelsEditTitleRequestTypeID)
	if e.Channel == nil {
		return fmt.Errorf("unable to encode channels.editTitle#566decd0: field channel is nil")
	}
	if err := e.Channel.Encode(b); err != nil {
		return fmt.Errorf("unable to encode channels.editTitle#566decd0: field channel: %w", err)
	}
	b.PutString(e.Title)
	return nil
}

// Decode implements bin.Decoder.
func (e *ChannelsEditTitleRequest) Decode(b *bin.Buffer) error {
	if e == nil {
		return fmt.Errorf("can't decode channels.editTitle#566decd0 to nil")
	}
	if err := b.ConsumeID(ChannelsEditTitleRequestTypeID); err != nil {
		return fmt.Errorf("unable to decode channels.editTitle#566decd0: %w", err)
	}
	{
		value, err := DecodeInputChannel(b)
		if err != nil {
			return fmt.Errorf("unable to decode channels.editTitle#566decd0: field channel: %w", err)
		}
		e.Channel = value
	}
	{
		value, err := b.String()
		if err != nil {
			return fmt.Errorf("unable to decode channels.editTitle#566decd0: field title: %w", err)
		}
		e.Title = value
	}
	return nil
}

// Ensuring interfaces in compile-time for ChannelsEditTitleRequest.
var (
	_ bin.Encoder = &ChannelsEditTitleRequest{}
	_ bin.Decoder = &ChannelsEditTitleRequest{}
)
