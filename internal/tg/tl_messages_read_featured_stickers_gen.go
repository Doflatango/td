// Code generated by gotdgen, DO NOT EDIT.

package tg

import (
	"context"
	"fmt"

	"github.com/ernado/td/bin"
)

// No-op definition for keeping imports.
var _ = bin.Buffer{}
var _ = context.Background()
var _ = fmt.Stringer(nil)

// MessagesReadFeaturedStickersRequest represents TL type `messages.readFeaturedStickers#5b118126`.
type MessagesReadFeaturedStickersRequest struct {
	// ID field of MessagesReadFeaturedStickersRequest.
	ID []int64
}

// MessagesReadFeaturedStickersRequestTypeID is TL type id of MessagesReadFeaturedStickersRequest.
const MessagesReadFeaturedStickersRequestTypeID = 0x5b118126

// Encode implements bin.Encoder.
func (r *MessagesReadFeaturedStickersRequest) Encode(b *bin.Buffer) error {
	if r == nil {
		return fmt.Errorf("can't encode messages.readFeaturedStickers#5b118126 as nil")
	}
	b.PutID(MessagesReadFeaturedStickersRequestTypeID)
	b.PutVectorHeader(len(r.ID))
	for _, v := range r.ID {
		b.PutLong(v)
	}
	return nil
}

// Decode implements bin.Decoder.
func (r *MessagesReadFeaturedStickersRequest) Decode(b *bin.Buffer) error {
	if r == nil {
		return fmt.Errorf("can't decode messages.readFeaturedStickers#5b118126 to nil")
	}
	if err := b.ConsumeID(MessagesReadFeaturedStickersRequestTypeID); err != nil {
		return fmt.Errorf("unable to decode messages.readFeaturedStickers#5b118126: %w", err)
	}
	{
		headerLen, err := b.VectorHeader()
		if err != nil {
			return fmt.Errorf("unable to decode messages.readFeaturedStickers#5b118126: field id: %w", err)
		}
		for idx := 0; idx < headerLen; idx++ {
			value, err := b.Long()
			if err != nil {
				return fmt.Errorf("unable to decode messages.readFeaturedStickers#5b118126: field id: %w", err)
			}
			r.ID = append(r.ID, value)
		}
	}
	return nil
}

// Ensuring interfaces in compile-time for MessagesReadFeaturedStickersRequest.
var (
	_ bin.Encoder = &MessagesReadFeaturedStickersRequest{}
	_ bin.Decoder = &MessagesReadFeaturedStickersRequest{}
)
