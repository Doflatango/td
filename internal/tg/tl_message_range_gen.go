// Code generated by gotdgen, DO NOT EDIT.

package tg

import (
	"context"
	"fmt"

	"github.com/ernado/td/bin"
)

// No-op definition for keeping imports.
var _ = bin.Buffer{}
var _ = context.Background()
var _ = fmt.Stringer(nil)

// MessageRange represents TL type `messageRange#ae30253`.
type MessageRange struct {
	// MinID field of MessageRange.
	MinID int
	// MaxID field of MessageRange.
	MaxID int
}

// MessageRangeTypeID is TL type id of MessageRange.
const MessageRangeTypeID = 0xae30253

// Encode implements bin.Encoder.
func (m *MessageRange) Encode(b *bin.Buffer) error {
	if m == nil {
		return fmt.Errorf("can't encode messageRange#ae30253 as nil")
	}
	b.PutID(MessageRangeTypeID)
	b.PutInt(m.MinID)
	b.PutInt(m.MaxID)
	return nil
}

// Decode implements bin.Decoder.
func (m *MessageRange) Decode(b *bin.Buffer) error {
	if m == nil {
		return fmt.Errorf("can't decode messageRange#ae30253 to nil")
	}
	if err := b.ConsumeID(MessageRangeTypeID); err != nil {
		return fmt.Errorf("unable to decode messageRange#ae30253: %w", err)
	}
	{
		value, err := b.Int()
		if err != nil {
			return fmt.Errorf("unable to decode messageRange#ae30253: field min_id: %w", err)
		}
		m.MinID = value
	}
	{
		value, err := b.Int()
		if err != nil {
			return fmt.Errorf("unable to decode messageRange#ae30253: field max_id: %w", err)
		}
		m.MaxID = value
	}
	return nil
}

// Ensuring interfaces in compile-time for MessageRange.
var (
	_ bin.Encoder = &MessageRange{}
	_ bin.Decoder = &MessageRange{}
)
