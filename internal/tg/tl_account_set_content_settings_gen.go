// Code generated by gotdgen, DO NOT EDIT.

package tg

import (
	"context"
	"fmt"

	"github.com/ernado/td/bin"
)

// No-op definition for keeping imports.
var _ = bin.Buffer{}
var _ = context.Background()
var _ = fmt.Stringer(nil)

// AccountSetContentSettingsRequest represents TL type `account.setContentSettings#b574b16b`.
type AccountSetContentSettingsRequest struct {
	// Flags field of AccountSetContentSettingsRequest.
	Flags bin.Fields
	// SensitiveEnabled field of AccountSetContentSettingsRequest.
	SensitiveEnabled bool
}

// AccountSetContentSettingsRequestTypeID is TL type id of AccountSetContentSettingsRequest.
const AccountSetContentSettingsRequestTypeID = 0xb574b16b

// Encode implements bin.Encoder.
func (s *AccountSetContentSettingsRequest) Encode(b *bin.Buffer) error {
	if s == nil {
		return fmt.Errorf("can't encode account.setContentSettings#b574b16b as nil")
	}
	b.PutID(AccountSetContentSettingsRequestTypeID)
	if err := s.Flags.Encode(b); err != nil {
		return fmt.Errorf("unable to encode account.setContentSettings#b574b16b: field flags: %w", err)
	}
	return nil
}

// SetSensitiveEnabled sets value of SensitiveEnabled conditional field.
func (s *AccountSetContentSettingsRequest) SetSensitiveEnabled(value bool) {
	if value {
		s.Flags.Set(0)
	} else {
		s.Flags.Unset(0)
	}
}

// Decode implements bin.Decoder.
func (s *AccountSetContentSettingsRequest) Decode(b *bin.Buffer) error {
	if s == nil {
		return fmt.Errorf("can't decode account.setContentSettings#b574b16b to nil")
	}
	if err := b.ConsumeID(AccountSetContentSettingsRequestTypeID); err != nil {
		return fmt.Errorf("unable to decode account.setContentSettings#b574b16b: %w", err)
	}
	{
		if err := s.Flags.Decode(b); err != nil {
			return fmt.Errorf("unable to decode account.setContentSettings#b574b16b: field flags: %w", err)
		}
	}
	s.SensitiveEnabled = s.Flags.Has(0)
	return nil
}

// Ensuring interfaces in compile-time for AccountSetContentSettingsRequest.
var (
	_ bin.Encoder = &AccountSetContentSettingsRequest{}
	_ bin.Decoder = &AccountSetContentSettingsRequest{}
)
