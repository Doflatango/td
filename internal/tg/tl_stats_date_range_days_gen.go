// Code generated by gotdgen, DO NOT EDIT.

package tg

import (
	"context"
	"fmt"

	"github.com/ernado/td/bin"
)

// No-op definition for keeping imports.
var _ = bin.Buffer{}
var _ = context.Background()
var _ = fmt.Stringer(nil)

// StatsDateRangeDays represents TL type `statsDateRangeDays#b637edaf`.
type StatsDateRangeDays struct {
	// MinDate field of StatsDateRangeDays.
	MinDate int
	// MaxDate field of StatsDateRangeDays.
	MaxDate int
}

// StatsDateRangeDaysTypeID is TL type id of StatsDateRangeDays.
const StatsDateRangeDaysTypeID = 0xb637edaf

// Encode implements bin.Encoder.
func (s *StatsDateRangeDays) Encode(b *bin.Buffer) error {
	if s == nil {
		return fmt.Errorf("can't encode statsDateRangeDays#b637edaf as nil")
	}
	b.PutID(StatsDateRangeDaysTypeID)
	b.PutInt(s.MinDate)
	b.PutInt(s.MaxDate)
	return nil
}

// Decode implements bin.Decoder.
func (s *StatsDateRangeDays) Decode(b *bin.Buffer) error {
	if s == nil {
		return fmt.Errorf("can't decode statsDateRangeDays#b637edaf to nil")
	}
	if err := b.ConsumeID(StatsDateRangeDaysTypeID); err != nil {
		return fmt.Errorf("unable to decode statsDateRangeDays#b637edaf: %w", err)
	}
	{
		value, err := b.Int()
		if err != nil {
			return fmt.Errorf("unable to decode statsDateRangeDays#b637edaf: field min_date: %w", err)
		}
		s.MinDate = value
	}
	{
		value, err := b.Int()
		if err != nil {
			return fmt.Errorf("unable to decode statsDateRangeDays#b637edaf: field max_date: %w", err)
		}
		s.MaxDate = value
	}
	return nil
}

// Ensuring interfaces in compile-time for StatsDateRangeDays.
var (
	_ bin.Encoder = &StatsDateRangeDays{}
	_ bin.Decoder = &StatsDateRangeDays{}
)
