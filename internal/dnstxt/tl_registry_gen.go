// Code generated by gotdgen, DO NOT EDIT.

package dnstxt

import (
	"context"
	"errors"
	"fmt"
	"sort"
	"strings"

	"go.uber.org/multierr"

	"github.com/gotd/td/bin"
	"github.com/gotd/td/tdp"
	"github.com/gotd/td/tgerr"
)

// No-op definition for keeping imports.
var (
	_ = bin.Buffer{}
	_ = context.Background()
	_ = fmt.Stringer(nil)
	_ = strings.Builder{}
	_ = errors.Is
	_ = multierr.AppendInto
	_ = sort.Ints
	_ = tdp.Format
	_ = tgerr.Error{}
)

// TypesMap returns mapping from type ids to TL type names.
func TypesMap() map[uint32]string {
	return map[uint32]string{
		0xd433ad73: "ipPort#d433ad73",
		0x37982646: "ipPortSecret#37982646",
		0x4679b65f: "accessPointRule#4679b65f",
		0x5a592a6c: "help.configSimple#5a592a6c",
	}
}

// NamesMap returns mapping from type names to TL type ids.
func NamesMap() map[string]uint32 {
	return map[string]uint32{
		"ipPort":            0xd433ad73,
		"ipPortSecret":      0x37982646,
		"accessPointRule":   0x4679b65f,
		"help.configSimple": 0x5a592a6c,
	}
}

// TypesConstructorMap maps type ids to constructors.
func TypesConstructorMap() map[uint32]func() bin.Object {
	return map[uint32]func() bin.Object{
		0xd433ad73: func() bin.Object { return &IPPort{} },
		0x37982646: func() bin.Object { return &IPPortSecret{} },
		0x4679b65f: func() bin.Object { return &AccessPointRule{} },
		0x5a592a6c: func() bin.Object { return &HelpConfigSimple{} },
	}
}
