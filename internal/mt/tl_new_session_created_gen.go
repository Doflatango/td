// Code generated by gotdgen, DO NOT EDIT.

package mt

import (
	"context"
	"fmt"

	"github.com/ernado/td/bin"
)

// No-op definition for keeping imports.
var _ = bin.Buffer{}
var _ = context.Background()
var _ = fmt.Stringer(nil)

// NewSessionCreated represents TL type `new_session_created#9ec20908`.
type NewSessionCreated struct {
	// FirstMsgID field of NewSessionCreated.
	FirstMsgID int64
	// UniqueID field of NewSessionCreated.
	UniqueID int64
	// ServerSalt field of NewSessionCreated.
	ServerSalt int64
}

// NewSessionCreatedTypeID is TL type id of NewSessionCreated.
const NewSessionCreatedTypeID = 0x9ec20908

// Encode implements bin.Encoder.
func (n *NewSessionCreated) Encode(b *bin.Buffer) error {
	if n == nil {
		return fmt.Errorf("can't encode new_session_created#9ec20908 as nil")
	}
	b.PutID(NewSessionCreatedTypeID)
	b.PutLong(n.FirstMsgID)
	b.PutLong(n.UniqueID)
	b.PutLong(n.ServerSalt)
	return nil
}

// Decode implements bin.Decoder.
func (n *NewSessionCreated) Decode(b *bin.Buffer) error {
	if n == nil {
		return fmt.Errorf("can't decode new_session_created#9ec20908 to nil")
	}
	if err := b.ConsumeID(NewSessionCreatedTypeID); err != nil {
		return fmt.Errorf("unable to decode new_session_created#9ec20908: %w", err)
	}
	{
		value, err := b.Long()
		if err != nil {
			return fmt.Errorf("unable to decode new_session_created#9ec20908: field first_msg_id: %w", err)
		}
		n.FirstMsgID = value
	}
	{
		value, err := b.Long()
		if err != nil {
			return fmt.Errorf("unable to decode new_session_created#9ec20908: field unique_id: %w", err)
		}
		n.UniqueID = value
	}
	{
		value, err := b.Long()
		if err != nil {
			return fmt.Errorf("unable to decode new_session_created#9ec20908: field server_salt: %w", err)
		}
		n.ServerSalt = value
	}
	return nil
}

// Ensuring interfaces in compile-time for NewSessionCreated.
var (
	_ bin.Encoder = &NewSessionCreated{}
	_ bin.Decoder = &NewSessionCreated{}
)
