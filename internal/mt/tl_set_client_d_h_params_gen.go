// Code generated by gotdgen, DO NOT EDIT.

package mt

import (
	"context"
	"fmt"
	"strings"

	"github.com/gotd/td/bin"
)

// No-op definition for keeping imports.
var _ = bin.Buffer{}
var _ = context.Background()
var _ = fmt.Stringer(nil)
var _ = strings.Builder{}

// SetClientDHParams represents TL type `set_client_DH_params#f5045f1f`.
type SetClientDHParams struct {
	// Nonce field of SetClientDHParams.
	Nonce bin.Int128
	// ServerNonce field of SetClientDHParams.
	ServerNonce bin.Int128
	// EncryptedData field of SetClientDHParams.
	EncryptedData []byte
}

// SetClientDHParamsTypeID is TL type id of SetClientDHParams.
const SetClientDHParamsTypeID = 0xf5045f1f

// String implements fmt.Stringer.
func (s *SetClientDHParams) String() string {
	if s == nil {
		return "SetClientDHParams(nil)"
	}
	var sb strings.Builder
	sb.WriteString("SetClientDHParams")
	sb.WriteString("{\n")
	sb.WriteString("\tNonce: ")
	sb.WriteString(fmt.Sprint(s.Nonce))
	sb.WriteString(",\n")
	sb.WriteString("\tServerNonce: ")
	sb.WriteString(fmt.Sprint(s.ServerNonce))
	sb.WriteString(",\n")
	sb.WriteString("\tEncryptedData: ")
	sb.WriteString(fmt.Sprint(s.EncryptedData))
	sb.WriteString(",\n")
	sb.WriteString("}")
	return sb.String()
}

// Encode implements bin.Encoder.
func (s *SetClientDHParams) Encode(b *bin.Buffer) error {
	if s == nil {
		return fmt.Errorf("can't encode set_client_DH_params#f5045f1f as nil")
	}
	b.PutID(SetClientDHParamsTypeID)
	b.PutInt128(s.Nonce)
	b.PutInt128(s.ServerNonce)
	b.PutBytes(s.EncryptedData)
	return nil
}

// Decode implements bin.Decoder.
func (s *SetClientDHParams) Decode(b *bin.Buffer) error {
	if s == nil {
		return fmt.Errorf("can't decode set_client_DH_params#f5045f1f to nil")
	}
	if err := b.ConsumeID(SetClientDHParamsTypeID); err != nil {
		return fmt.Errorf("unable to decode set_client_DH_params#f5045f1f: %w", err)
	}
	{
		value, err := b.Int128()
		if err != nil {
			return fmt.Errorf("unable to decode set_client_DH_params#f5045f1f: field nonce: %w", err)
		}
		s.Nonce = value
	}
	{
		value, err := b.Int128()
		if err != nil {
			return fmt.Errorf("unable to decode set_client_DH_params#f5045f1f: field server_nonce: %w", err)
		}
		s.ServerNonce = value
	}
	{
		value, err := b.Bytes()
		if err != nil {
			return fmt.Errorf("unable to decode set_client_DH_params#f5045f1f: field encrypted_data: %w", err)
		}
		s.EncryptedData = value
	}
	return nil
}

// Ensuring interfaces in compile-time for SetClientDHParams.
var (
	_ bin.Encoder = &SetClientDHParams{}
	_ bin.Decoder = &SetClientDHParams{}
)
