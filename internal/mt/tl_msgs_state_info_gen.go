// Code generated by gotdgen, DO NOT EDIT.

package mt

import (
	"context"
	"errors"
	"fmt"
	"sort"
	"strings"

	"github.com/gotd/td/bin"
)

// No-op definition for keeping imports.
var _ = bin.Buffer{}
var _ = context.Background()
var _ = fmt.Stringer(nil)
var _ = strings.Builder{}
var _ = errors.Is
var _ = sort.Ints

// MsgsStateInfo represents TL type `msgs_state_info#4deb57d`.
type MsgsStateInfo struct {
	// ReqMsgID field of MsgsStateInfo.
	ReqMsgID int64 `tl:"req_msg_id"`
	// Info field of MsgsStateInfo.
	Info []byte `tl:"info"`
}

// MsgsStateInfoTypeID is TL type id of MsgsStateInfo.
const MsgsStateInfoTypeID = 0x4deb57d

func (m *MsgsStateInfo) Zero() bool {
	if m == nil {
		return true
	}
	if !(m.ReqMsgID == 0) {
		return false
	}
	if !(m.Info == nil) {
		return false
	}

	return true
}

// String implements fmt.Stringer.
func (m *MsgsStateInfo) String() string {
	if m == nil {
		return "MsgsStateInfo(nil)"
	}
	type Alias MsgsStateInfo
	return fmt.Sprintf("MsgsStateInfo%+v", Alias(*m))
}

// FillFrom fills MsgsStateInfo from given interface.
func (m *MsgsStateInfo) FillFrom(from interface {
	GetReqMsgID() (value int64)
	GetInfo() (value []byte)
}) {
	m.ReqMsgID = from.GetReqMsgID()
	m.Info = from.GetInfo()
}

// TypeID returns type id in TL schema.
//
// See https://core.telegram.org/mtproto/TL-tl#remarks.
func (m *MsgsStateInfo) TypeID() uint32 {
	return MsgsStateInfoTypeID
}

// TypeName returns name of type in TL schema.
func (m *MsgsStateInfo) TypeName() string {
	return "msgs_state_info"
}

// Encode implements bin.Encoder.
func (m *MsgsStateInfo) Encode(b *bin.Buffer) error {
	if m == nil {
		return fmt.Errorf("can't encode msgs_state_info#4deb57d as nil")
	}
	b.PutID(MsgsStateInfoTypeID)
	b.PutLong(m.ReqMsgID)
	b.PutBytes(m.Info)
	return nil
}

// GetReqMsgID returns value of ReqMsgID field.
func (m *MsgsStateInfo) GetReqMsgID() (value int64) {
	return m.ReqMsgID
}

// GetInfo returns value of Info field.
func (m *MsgsStateInfo) GetInfo() (value []byte) {
	return m.Info
}

// Decode implements bin.Decoder.
func (m *MsgsStateInfo) Decode(b *bin.Buffer) error {
	if m == nil {
		return fmt.Errorf("can't decode msgs_state_info#4deb57d to nil")
	}
	if err := b.ConsumeID(MsgsStateInfoTypeID); err != nil {
		return fmt.Errorf("unable to decode msgs_state_info#4deb57d: %w", err)
	}
	{
		value, err := b.Long()
		if err != nil {
			return fmt.Errorf("unable to decode msgs_state_info#4deb57d: field req_msg_id: %w", err)
		}
		m.ReqMsgID = value
	}
	{
		value, err := b.Bytes()
		if err != nil {
			return fmt.Errorf("unable to decode msgs_state_info#4deb57d: field info: %w", err)
		}
		m.Info = value
	}
	return nil
}

// Ensuring interfaces in compile-time for MsgsStateInfo.
var (
	_ bin.Encoder = &MsgsStateInfo{}
	_ bin.Decoder = &MsgsStateInfo{}
)
