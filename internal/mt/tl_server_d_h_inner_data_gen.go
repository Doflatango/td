// Code generated by gotdgen, DO NOT EDIT.

package mt

import (
	"context"
	"fmt"

	"github.com/gotd/td/bin"
)

// No-op definition for keeping imports.
var _ = bin.Buffer{}
var _ = context.Background()
var _ = fmt.Stringer(nil)

// ServerDHInnerData represents TL type `server_DH_inner_data#b5890dba`.
type ServerDHInnerData struct {
	// Nonce field of ServerDHInnerData.
	Nonce bin.Int128
	// ServerNonce field of ServerDHInnerData.
	ServerNonce bin.Int128
	// G field of ServerDHInnerData.
	G int
	// DhPrime field of ServerDHInnerData.
	DhPrime []byte
	// GA field of ServerDHInnerData.
	GA []byte
	// ServerTime field of ServerDHInnerData.
	ServerTime int
}

// ServerDHInnerDataTypeID is TL type id of ServerDHInnerData.
const ServerDHInnerDataTypeID = 0xb5890dba

// Encode implements bin.Encoder.
func (s *ServerDHInnerData) Encode(b *bin.Buffer) error {
	if s == nil {
		return fmt.Errorf("can't encode server_DH_inner_data#b5890dba as nil")
	}
	b.PutID(ServerDHInnerDataTypeID)
	b.PutInt128(s.Nonce)
	b.PutInt128(s.ServerNonce)
	b.PutInt(s.G)
	b.PutBytes(s.DhPrime)
	b.PutBytes(s.GA)
	b.PutInt(s.ServerTime)
	return nil
}

// Decode implements bin.Decoder.
func (s *ServerDHInnerData) Decode(b *bin.Buffer) error {
	if s == nil {
		return fmt.Errorf("can't decode server_DH_inner_data#b5890dba to nil")
	}
	if err := b.ConsumeID(ServerDHInnerDataTypeID); err != nil {
		return fmt.Errorf("unable to decode server_DH_inner_data#b5890dba: %w", err)
	}
	{
		value, err := b.Int128()
		if err != nil {
			return fmt.Errorf("unable to decode server_DH_inner_data#b5890dba: field nonce: %w", err)
		}
		s.Nonce = value
	}
	{
		value, err := b.Int128()
		if err != nil {
			return fmt.Errorf("unable to decode server_DH_inner_data#b5890dba: field server_nonce: %w", err)
		}
		s.ServerNonce = value
	}
	{
		value, err := b.Int()
		if err != nil {
			return fmt.Errorf("unable to decode server_DH_inner_data#b5890dba: field g: %w", err)
		}
		s.G = value
	}
	{
		value, err := b.Bytes()
		if err != nil {
			return fmt.Errorf("unable to decode server_DH_inner_data#b5890dba: field dh_prime: %w", err)
		}
		s.DhPrime = value
	}
	{
		value, err := b.Bytes()
		if err != nil {
			return fmt.Errorf("unable to decode server_DH_inner_data#b5890dba: field g_a: %w", err)
		}
		s.GA = value
	}
	{
		value, err := b.Int()
		if err != nil {
			return fmt.Errorf("unable to decode server_DH_inner_data#b5890dba: field server_time: %w", err)
		}
		s.ServerTime = value
	}
	return nil
}

// Ensuring interfaces in compile-time for ServerDHInnerData.
var (
	_ bin.Encoder = &ServerDHInnerData{}
	_ bin.Decoder = &ServerDHInnerData{}
)
