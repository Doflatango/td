// Code generated by gotdgen, DO NOT EDIT.

package tg

import (
	"context"
	"errors"
	"fmt"
	"strings"

	"github.com/gotd/td/bin"
)

// No-op definition for keeping imports.
var _ = bin.Buffer{}
var _ = context.Background()
var _ = fmt.Stringer(nil)
var _ = strings.Builder{}
var _ = errors.Is

// MessagesHistoryImport represents TL type `messages.historyImport#1662af0b`.
//
// See https://core.telegram.org/constructor/messages.historyImport for reference.
type MessagesHistoryImport struct {
	// ID field of MessagesHistoryImport.
	ID int64
}

// MessagesHistoryImportTypeID is TL type id of MessagesHistoryImport.
const MessagesHistoryImportTypeID = 0x1662af0b

func (h *MessagesHistoryImport) Zero() bool {
	if h == nil {
		return true
	}
	if !(h.ID == 0) {
		return false
	}

	return true
}

// String implements fmt.Stringer.
func (h *MessagesHistoryImport) String() string {
	if h == nil {
		return "MessagesHistoryImport(nil)"
	}
	type Alias MessagesHistoryImport
	return fmt.Sprintf("MessagesHistoryImport%+v", Alias(*h))
}

// FillFrom fills MessagesHistoryImport from given interface.
func (h *MessagesHistoryImport) FillFrom(from interface {
	GetID() (value int64)
}) {
	h.ID = from.GetID()
}

// TypeID returns MTProto type id (CRC code).
// See https://core.telegram.org/mtproto/TL-tl#remarks.
func (h *MessagesHistoryImport) TypeID() uint32 {
	return MessagesHistoryImportTypeID
}

// Encode implements bin.Encoder.
func (h *MessagesHistoryImport) Encode(b *bin.Buffer) error {
	if h == nil {
		return fmt.Errorf("can't encode messages.historyImport#1662af0b as nil")
	}
	b.PutID(MessagesHistoryImportTypeID)
	b.PutLong(h.ID)
	return nil
}

// GetID returns value of ID field.
func (h *MessagesHistoryImport) GetID() (value int64) {
	return h.ID
}

// Decode implements bin.Decoder.
func (h *MessagesHistoryImport) Decode(b *bin.Buffer) error {
	if h == nil {
		return fmt.Errorf("can't decode messages.historyImport#1662af0b to nil")
	}
	if err := b.ConsumeID(MessagesHistoryImportTypeID); err != nil {
		return fmt.Errorf("unable to decode messages.historyImport#1662af0b: %w", err)
	}
	{
		value, err := b.Long()
		if err != nil {
			return fmt.Errorf("unable to decode messages.historyImport#1662af0b: field id: %w", err)
		}
		h.ID = value
	}
	return nil
}

// Ensuring interfaces in compile-time for MessagesHistoryImport.
var (
	_ bin.Encoder = &MessagesHistoryImport{}
	_ bin.Decoder = &MessagesHistoryImport{}
)
