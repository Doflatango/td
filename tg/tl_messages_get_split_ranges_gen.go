// Code generated by gotdgen, DO NOT EDIT.

package tg

import (
	"context"
	"fmt"

	"github.com/gotd/td/bin"
)

// No-op definition for keeping imports.
var _ = bin.Buffer{}
var _ = context.Background()
var _ = fmt.Stringer(nil)

// MessagesGetSplitRangesRequest represents TL type `messages.getSplitRanges#1cff7e08`.
// Get message ranges for saving the user's chat history
//
// See https://core.telegram.org/method/messages.getSplitRanges for reference.
type MessagesGetSplitRangesRequest struct {
}

// MessagesGetSplitRangesRequestTypeID is TL type id of MessagesGetSplitRangesRequest.
const MessagesGetSplitRangesRequestTypeID = 0x1cff7e08

// Encode implements bin.Encoder.
func (g *MessagesGetSplitRangesRequest) Encode(b *bin.Buffer) error {
	if g == nil {
		return fmt.Errorf("can't encode messages.getSplitRanges#1cff7e08 as nil")
	}
	b.PutID(MessagesGetSplitRangesRequestTypeID)
	return nil
}

// Decode implements bin.Decoder.
func (g *MessagesGetSplitRangesRequest) Decode(b *bin.Buffer) error {
	if g == nil {
		return fmt.Errorf("can't decode messages.getSplitRanges#1cff7e08 to nil")
	}
	if err := b.ConsumeID(MessagesGetSplitRangesRequestTypeID); err != nil {
		return fmt.Errorf("unable to decode messages.getSplitRanges#1cff7e08: %w", err)
	}
	return nil
}

// Ensuring interfaces in compile-time for MessagesGetSplitRangesRequest.
var (
	_ bin.Encoder = &MessagesGetSplitRangesRequest{}
	_ bin.Decoder = &MessagesGetSplitRangesRequest{}
)

// MessagesGetSplitRanges invokes method messages.getSplitRanges#1cff7e08 returning error if any.
// Get message ranges for saving the user's chat history
//
// See https://core.telegram.org/method/messages.getSplitRanges for reference.
func (c *Client) MessagesGetSplitRanges(ctx context.Context, request *MessagesGetSplitRangesRequest) ([]MessageRange, error) {
	var result MessageRangeVector
	if err := c.rpc.InvokeRaw(ctx, request, &result); err != nil {
		return nil, err
	}
	return result.Elems, nil
}
