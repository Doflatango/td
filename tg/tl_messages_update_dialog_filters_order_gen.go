// Code generated by gotdgen, DO NOT EDIT.

package tg

import (
	"context"
	"fmt"

	"github.com/gotd/td/bin"
)

// No-op definition for keeping imports.
var _ = bin.Buffer{}
var _ = context.Background()
var _ = fmt.Stringer(nil)

// MessagesUpdateDialogFiltersOrderRequest represents TL type `messages.updateDialogFiltersOrder#c563c1e4`.
type MessagesUpdateDialogFiltersOrderRequest struct {
	// Order field of MessagesUpdateDialogFiltersOrderRequest.
	Order []int
}

// MessagesUpdateDialogFiltersOrderRequestTypeID is TL type id of MessagesUpdateDialogFiltersOrderRequest.
const MessagesUpdateDialogFiltersOrderRequestTypeID = 0xc563c1e4

// Encode implements bin.Encoder.
func (u *MessagesUpdateDialogFiltersOrderRequest) Encode(b *bin.Buffer) error {
	if u == nil {
		return fmt.Errorf("can't encode messages.updateDialogFiltersOrder#c563c1e4 as nil")
	}
	b.PutID(MessagesUpdateDialogFiltersOrderRequestTypeID)
	b.PutVectorHeader(len(u.Order))
	for _, v := range u.Order {
		b.PutInt(v)
	}
	return nil
}

// Decode implements bin.Decoder.
func (u *MessagesUpdateDialogFiltersOrderRequest) Decode(b *bin.Buffer) error {
	if u == nil {
		return fmt.Errorf("can't decode messages.updateDialogFiltersOrder#c563c1e4 to nil")
	}
	if err := b.ConsumeID(MessagesUpdateDialogFiltersOrderRequestTypeID); err != nil {
		return fmt.Errorf("unable to decode messages.updateDialogFiltersOrder#c563c1e4: %w", err)
	}
	{
		headerLen, err := b.VectorHeader()
		if err != nil {
			return fmt.Errorf("unable to decode messages.updateDialogFiltersOrder#c563c1e4: field order: %w", err)
		}
		for idx := 0; idx < headerLen; idx++ {
			value, err := b.Int()
			if err != nil {
				return fmt.Errorf("unable to decode messages.updateDialogFiltersOrder#c563c1e4: field order: %w", err)
			}
			u.Order = append(u.Order, value)
		}
	}
	return nil
}

// Ensuring interfaces in compile-time for MessagesUpdateDialogFiltersOrderRequest.
var (
	_ bin.Encoder = &MessagesUpdateDialogFiltersOrderRequest{}
	_ bin.Decoder = &MessagesUpdateDialogFiltersOrderRequest{}
)
