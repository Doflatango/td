// Code generated by gotdgen, DO NOT EDIT.

package tg

import (
	"context"
	"fmt"

	"github.com/gotd/td/bin"
)

// No-op definition for keeping imports.
var _ = bin.Buffer{}
var _ = context.Background()
var _ = fmt.Stringer(nil)

// AccountAuthorizations represents TL type `account.authorizations#1250abde`.
// Logged-in sessions
//
// See https://core.telegram.org/constructor/account.authorizations for reference.
type AccountAuthorizations struct {
	// Logged-in sessions
	Authorizations []Authorization
}

// AccountAuthorizationsTypeID is TL type id of AccountAuthorizations.
const AccountAuthorizationsTypeID = 0x1250abde

// Encode implements bin.Encoder.
func (a *AccountAuthorizations) Encode(b *bin.Buffer) error {
	if a == nil {
		return fmt.Errorf("can't encode account.authorizations#1250abde as nil")
	}
	b.PutID(AccountAuthorizationsTypeID)
	b.PutVectorHeader(len(a.Authorizations))
	for idx, v := range a.Authorizations {
		if err := v.Encode(b); err != nil {
			return fmt.Errorf("unable to encode account.authorizations#1250abde: field authorizations element with index %d: %w", idx, err)
		}
	}
	return nil
}

// Decode implements bin.Decoder.
func (a *AccountAuthorizations) Decode(b *bin.Buffer) error {
	if a == nil {
		return fmt.Errorf("can't decode account.authorizations#1250abde to nil")
	}
	if err := b.ConsumeID(AccountAuthorizationsTypeID); err != nil {
		return fmt.Errorf("unable to decode account.authorizations#1250abde: %w", err)
	}
	{
		headerLen, err := b.VectorHeader()
		if err != nil {
			return fmt.Errorf("unable to decode account.authorizations#1250abde: field authorizations: %w", err)
		}
		for idx := 0; idx < headerLen; idx++ {
			var value Authorization
			if err := value.Decode(b); err != nil {
				return fmt.Errorf("unable to decode account.authorizations#1250abde: field authorizations: %w", err)
			}
			a.Authorizations = append(a.Authorizations, value)
		}
	}
	return nil
}

// Ensuring interfaces in compile-time for AccountAuthorizations.
var (
	_ bin.Encoder = &AccountAuthorizations{}
	_ bin.Decoder = &AccountAuthorizations{}
)
