// Code generated by gotdgen, DO NOT EDIT.

package tg

import (
	"context"
	"fmt"

	"github.com/gotd/td/bin"
)

// No-op definition for keeping imports.
var _ = bin.Buffer{}
var _ = context.Background()
var _ = fmt.Stringer(nil)

// MessagesDeleteMessagesRequest represents TL type `messages.deleteMessages#e58e95d2`.
//
// See https://core.telegram.org/method/messages.deleteMessages for reference.
type MessagesDeleteMessagesRequest struct {
	// Flags field of MessagesDeleteMessagesRequest.
	Flags bin.Fields
	// Revoke field of MessagesDeleteMessagesRequest.
	Revoke bool
	// ID field of MessagesDeleteMessagesRequest.
	ID []int
}

// MessagesDeleteMessagesRequestTypeID is TL type id of MessagesDeleteMessagesRequest.
const MessagesDeleteMessagesRequestTypeID = 0xe58e95d2

// Encode implements bin.Encoder.
func (d *MessagesDeleteMessagesRequest) Encode(b *bin.Buffer) error {
	if d == nil {
		return fmt.Errorf("can't encode messages.deleteMessages#e58e95d2 as nil")
	}
	b.PutID(MessagesDeleteMessagesRequestTypeID)
	if err := d.Flags.Encode(b); err != nil {
		return fmt.Errorf("unable to encode messages.deleteMessages#e58e95d2: field flags: %w", err)
	}
	b.PutVectorHeader(len(d.ID))
	for _, v := range d.ID {
		b.PutInt(v)
	}
	return nil
}

// SetRevoke sets value of Revoke conditional field.
func (d *MessagesDeleteMessagesRequest) SetRevoke(value bool) {
	if value {
		d.Flags.Set(0)
	} else {
		d.Flags.Unset(0)
	}
}

// Decode implements bin.Decoder.
func (d *MessagesDeleteMessagesRequest) Decode(b *bin.Buffer) error {
	if d == nil {
		return fmt.Errorf("can't decode messages.deleteMessages#e58e95d2 to nil")
	}
	if err := b.ConsumeID(MessagesDeleteMessagesRequestTypeID); err != nil {
		return fmt.Errorf("unable to decode messages.deleteMessages#e58e95d2: %w", err)
	}
	{
		if err := d.Flags.Decode(b); err != nil {
			return fmt.Errorf("unable to decode messages.deleteMessages#e58e95d2: field flags: %w", err)
		}
	}
	d.Revoke = d.Flags.Has(0)
	{
		headerLen, err := b.VectorHeader()
		if err != nil {
			return fmt.Errorf("unable to decode messages.deleteMessages#e58e95d2: field id: %w", err)
		}
		for idx := 0; idx < headerLen; idx++ {
			value, err := b.Int()
			if err != nil {
				return fmt.Errorf("unable to decode messages.deleteMessages#e58e95d2: field id: %w", err)
			}
			d.ID = append(d.ID, value)
		}
	}
	return nil
}

// Ensuring interfaces in compile-time for MessagesDeleteMessagesRequest.
var (
	_ bin.Encoder = &MessagesDeleteMessagesRequest{}
	_ bin.Decoder = &MessagesDeleteMessagesRequest{}
)

// MessagesDeleteMessages invokes method messages.deleteMessages#e58e95d2 returning error if any.
//
// See https://core.telegram.org/method/messages.deleteMessages for reference.
func (c *Client) MessagesDeleteMessages(ctx context.Context, request *MessagesDeleteMessagesRequest) (*MessagesAffectedMessages, error) {
	var result MessagesAffectedMessages
	if err := c.rpc.InvokeRaw(ctx, request, &result); err != nil {
		return nil, err
	}
	return &result, nil
}
