// Code generated by gotdgen, DO NOT EDIT.

package tg

import (
	"context"
	"fmt"

	"github.com/gotd/td/bin"
)

// No-op definition for keeping imports.
var _ = bin.Buffer{}
var _ = context.Background()
var _ = fmt.Stringer(nil)

// MessagesMarkDialogUnreadRequest represents TL type `messages.markDialogUnread#c286d98f`.
//
// See https://core.telegram.org/method/messages.markDialogUnread for reference.
type MessagesMarkDialogUnreadRequest struct {
	// Flags field of MessagesMarkDialogUnreadRequest.
	Flags bin.Fields
	// Unread field of MessagesMarkDialogUnreadRequest.
	Unread bool
	// Peer field of MessagesMarkDialogUnreadRequest.
	Peer InputDialogPeerClass
}

// MessagesMarkDialogUnreadRequestTypeID is TL type id of MessagesMarkDialogUnreadRequest.
const MessagesMarkDialogUnreadRequestTypeID = 0xc286d98f

// Encode implements bin.Encoder.
func (m *MessagesMarkDialogUnreadRequest) Encode(b *bin.Buffer) error {
	if m == nil {
		return fmt.Errorf("can't encode messages.markDialogUnread#c286d98f as nil")
	}
	b.PutID(MessagesMarkDialogUnreadRequestTypeID)
	if err := m.Flags.Encode(b); err != nil {
		return fmt.Errorf("unable to encode messages.markDialogUnread#c286d98f: field flags: %w", err)
	}
	if m.Peer == nil {
		return fmt.Errorf("unable to encode messages.markDialogUnread#c286d98f: field peer is nil")
	}
	if err := m.Peer.Encode(b); err != nil {
		return fmt.Errorf("unable to encode messages.markDialogUnread#c286d98f: field peer: %w", err)
	}
	return nil
}

// SetUnread sets value of Unread conditional field.
func (m *MessagesMarkDialogUnreadRequest) SetUnread(value bool) {
	if value {
		m.Flags.Set(0)
	} else {
		m.Flags.Unset(0)
	}
}

// Decode implements bin.Decoder.
func (m *MessagesMarkDialogUnreadRequest) Decode(b *bin.Buffer) error {
	if m == nil {
		return fmt.Errorf("can't decode messages.markDialogUnread#c286d98f to nil")
	}
	if err := b.ConsumeID(MessagesMarkDialogUnreadRequestTypeID); err != nil {
		return fmt.Errorf("unable to decode messages.markDialogUnread#c286d98f: %w", err)
	}
	{
		if err := m.Flags.Decode(b); err != nil {
			return fmt.Errorf("unable to decode messages.markDialogUnread#c286d98f: field flags: %w", err)
		}
	}
	m.Unread = m.Flags.Has(0)
	{
		value, err := DecodeInputDialogPeer(b)
		if err != nil {
			return fmt.Errorf("unable to decode messages.markDialogUnread#c286d98f: field peer: %w", err)
		}
		m.Peer = value
	}
	return nil
}

// Ensuring interfaces in compile-time for MessagesMarkDialogUnreadRequest.
var (
	_ bin.Encoder = &MessagesMarkDialogUnreadRequest{}
	_ bin.Decoder = &MessagesMarkDialogUnreadRequest{}
)

// MessagesMarkDialogUnread invokes method messages.markDialogUnread#c286d98f returning error if any.
//
// See https://core.telegram.org/method/messages.markDialogUnread for reference.
func (c *Client) MessagesMarkDialogUnread(ctx context.Context, request *MessagesMarkDialogUnreadRequest) (BoolClass, error) {
	var result BoolBox
	if err := c.rpc.InvokeRaw(ctx, request, &result); err != nil {
		return nil, err
	}
	return result.Bool, nil
}
