// Code generated by gotdgen, DO NOT EDIT.

package tg

import (
	"context"
	"fmt"
	"strings"

	"github.com/gotd/td/bin"
)

// No-op definition for keeping imports.
var _ = bin.Buffer{}
var _ = context.Background()
var _ = fmt.Stringer(nil)
var _ = strings.Builder{}

// MessagesGetStickersRequest represents TL type `messages.getStickers#43d4f2c`.
// Get stickers by emoji
//
// See https://core.telegram.org/method/messages.getStickers for reference.
type MessagesGetStickersRequest struct {
	// The emoji
	Emoticon string
	// Hash for pagination, for more info click hereÂ¹
	//
	// Links:
	//  1) https://core.telegram.org/api/offsets#hash-generation
	Hash int
}

// MessagesGetStickersRequestTypeID is TL type id of MessagesGetStickersRequest.
const MessagesGetStickersRequestTypeID = 0x43d4f2c

// String implements fmt.Stringer.
func (g *MessagesGetStickersRequest) String() string {
	if g == nil {
		return "MessagesGetStickersRequest(nil)"
	}
	var sb strings.Builder
	sb.WriteString("MessagesGetStickersRequest")
	sb.WriteString("{\n")
	sb.WriteString("\tEmoticon: ")
	sb.WriteString(fmt.Sprint(g.Emoticon))
	sb.WriteString(",\n")
	sb.WriteString("\tHash: ")
	sb.WriteString(fmt.Sprint(g.Hash))
	sb.WriteString(",\n")
	sb.WriteString("}")
	return sb.String()
}

// Encode implements bin.Encoder.
func (g *MessagesGetStickersRequest) Encode(b *bin.Buffer) error {
	if g == nil {
		return fmt.Errorf("can't encode messages.getStickers#43d4f2c as nil")
	}
	b.PutID(MessagesGetStickersRequestTypeID)
	b.PutString(g.Emoticon)
	b.PutInt(g.Hash)
	return nil
}

// Decode implements bin.Decoder.
func (g *MessagesGetStickersRequest) Decode(b *bin.Buffer) error {
	if g == nil {
		return fmt.Errorf("can't decode messages.getStickers#43d4f2c to nil")
	}
	if err := b.ConsumeID(MessagesGetStickersRequestTypeID); err != nil {
		return fmt.Errorf("unable to decode messages.getStickers#43d4f2c: %w", err)
	}
	{
		value, err := b.String()
		if err != nil {
			return fmt.Errorf("unable to decode messages.getStickers#43d4f2c: field emoticon: %w", err)
		}
		g.Emoticon = value
	}
	{
		value, err := b.Int()
		if err != nil {
			return fmt.Errorf("unable to decode messages.getStickers#43d4f2c: field hash: %w", err)
		}
		g.Hash = value
	}
	return nil
}

// Ensuring interfaces in compile-time for MessagesGetStickersRequest.
var (
	_ bin.Encoder = &MessagesGetStickersRequest{}
	_ bin.Decoder = &MessagesGetStickersRequest{}
)

// MessagesGetStickers invokes method messages.getStickers#43d4f2c returning error if any.
// Get stickers by emoji
//
// See https://core.telegram.org/method/messages.getStickers for reference.
func (c *Client) MessagesGetStickers(ctx context.Context, request *MessagesGetStickersRequest) (MessagesStickersClass, error) {
	var result MessagesStickersBox

	if err := c.rpc.InvokeRaw(ctx, request, &result); err != nil {
		return nil, err
	}
	return result.Stickers, nil
}
