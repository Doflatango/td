// Code generated by gotdgen, DO NOT EDIT.

package tg

import (
	"context"
	"fmt"
	"strings"

	"github.com/gotd/td/bin"
)

// No-op definition for keeping imports.
var _ = bin.Buffer{}
var _ = context.Background()
var _ = fmt.Stringer(nil)
var _ = strings.Builder{}

// ChannelsTogglePreHistoryHiddenRequest represents TL type `channels.togglePreHistoryHidden#eabbb94c`.
// Hide/unhide message history for new channel/supergroup users
//
// See https://core.telegram.org/method/channels.togglePreHistoryHidden for reference.
type ChannelsTogglePreHistoryHiddenRequest struct {
	// Channel/supergroup
	Channel InputChannelClass
	// Hide/unhide
	Enabled bool
}

// ChannelsTogglePreHistoryHiddenRequestTypeID is TL type id of ChannelsTogglePreHistoryHiddenRequest.
const ChannelsTogglePreHistoryHiddenRequestTypeID = 0xeabbb94c

// String implements fmt.Stringer.
func (t *ChannelsTogglePreHistoryHiddenRequest) String() string {
	if t == nil {
		return "ChannelsTogglePreHistoryHiddenRequest(nil)"
	}
	var sb strings.Builder
	sb.WriteString("ChannelsTogglePreHistoryHiddenRequest")
	sb.WriteString("{\n")
	sb.WriteString("\tChannel: ")
	sb.WriteString(t.Channel.String())
	sb.WriteString(",\n")
	sb.WriteString("\tEnabled: ")
	sb.WriteString(fmt.Sprint(t.Enabled))
	sb.WriteString(",\n")
	sb.WriteString("}")
	return sb.String()
}

// Encode implements bin.Encoder.
func (t *ChannelsTogglePreHistoryHiddenRequest) Encode(b *bin.Buffer) error {
	if t == nil {
		return fmt.Errorf("can't encode channels.togglePreHistoryHidden#eabbb94c as nil")
	}
	b.PutID(ChannelsTogglePreHistoryHiddenRequestTypeID)
	if t.Channel == nil {
		return fmt.Errorf("unable to encode channels.togglePreHistoryHidden#eabbb94c: field channel is nil")
	}
	if err := t.Channel.Encode(b); err != nil {
		return fmt.Errorf("unable to encode channels.togglePreHistoryHidden#eabbb94c: field channel: %w", err)
	}
	b.PutBool(t.Enabled)
	return nil
}

// Decode implements bin.Decoder.
func (t *ChannelsTogglePreHistoryHiddenRequest) Decode(b *bin.Buffer) error {
	if t == nil {
		return fmt.Errorf("can't decode channels.togglePreHistoryHidden#eabbb94c to nil")
	}
	if err := b.ConsumeID(ChannelsTogglePreHistoryHiddenRequestTypeID); err != nil {
		return fmt.Errorf("unable to decode channels.togglePreHistoryHidden#eabbb94c: %w", err)
	}
	{
		value, err := DecodeInputChannel(b)
		if err != nil {
			return fmt.Errorf("unable to decode channels.togglePreHistoryHidden#eabbb94c: field channel: %w", err)
		}
		t.Channel = value
	}
	{
		value, err := b.Bool()
		if err != nil {
			return fmt.Errorf("unable to decode channels.togglePreHistoryHidden#eabbb94c: field enabled: %w", err)
		}
		t.Enabled = value
	}
	return nil
}

// Ensuring interfaces in compile-time for ChannelsTogglePreHistoryHiddenRequest.
var (
	_ bin.Encoder = &ChannelsTogglePreHistoryHiddenRequest{}
	_ bin.Decoder = &ChannelsTogglePreHistoryHiddenRequest{}
)

// ChannelsTogglePreHistoryHidden invokes method channels.togglePreHistoryHidden#eabbb94c returning error if any.
// Hide/unhide message history for new channel/supergroup users
//
// See https://core.telegram.org/method/channels.togglePreHistoryHidden for reference.
func (c *Client) ChannelsTogglePreHistoryHidden(ctx context.Context, request *ChannelsTogglePreHistoryHiddenRequest) (UpdatesClass, error) {
	var result UpdatesBox

	if err := c.rpc.InvokeRaw(ctx, request, &result); err != nil {
		return nil, err
	}
	return result.Updates, nil
}
