// Code generated by gotdgen, DO NOT EDIT.

package tg

import (
	"context"
	"fmt"

	"github.com/gotd/td/bin"
)

// No-op definition for keeping imports.
var _ = bin.Buffer{}
var _ = context.Background()
var _ = fmt.Stringer(nil)

// PhotosDeletePhotosRequest represents TL type `photos.deletePhotos#87cf7f2f`.
// Deletes profile photos.
//
// See https://core.telegram.org/method/photos.deletePhotos for reference.
type PhotosDeletePhotosRequest struct {
	// Input photos to delete
	ID []InputPhotoClass
}

// PhotosDeletePhotosRequestTypeID is TL type id of PhotosDeletePhotosRequest.
const PhotosDeletePhotosRequestTypeID = 0x87cf7f2f

// Encode implements bin.Encoder.
func (d *PhotosDeletePhotosRequest) Encode(b *bin.Buffer) error {
	if d == nil {
		return fmt.Errorf("can't encode photos.deletePhotos#87cf7f2f as nil")
	}
	b.PutID(PhotosDeletePhotosRequestTypeID)
	b.PutVectorHeader(len(d.ID))
	for idx, v := range d.ID {
		if v == nil {
			return fmt.Errorf("unable to encode photos.deletePhotos#87cf7f2f: field id element with index %d is nil", idx)
		}
		if err := v.Encode(b); err != nil {
			return fmt.Errorf("unable to encode photos.deletePhotos#87cf7f2f: field id element with index %d: %w", idx, err)
		}
	}
	return nil
}

// Decode implements bin.Decoder.
func (d *PhotosDeletePhotosRequest) Decode(b *bin.Buffer) error {
	if d == nil {
		return fmt.Errorf("can't decode photos.deletePhotos#87cf7f2f to nil")
	}
	if err := b.ConsumeID(PhotosDeletePhotosRequestTypeID); err != nil {
		return fmt.Errorf("unable to decode photos.deletePhotos#87cf7f2f: %w", err)
	}

	{
		headerLen, err := b.VectorHeader()
		if err != nil {
			return fmt.Errorf("unable to decode photos.deletePhotos#87cf7f2f: field id: %w", err)
		}
		for idx := 0; idx < headerLen; idx++ {
			value, err := DecodeInputPhoto(b)
			if err != nil {
				return fmt.Errorf("unable to decode photos.deletePhotos#87cf7f2f: field id: %w", err)
			}
			d.ID = append(d.ID, value)
		}
	}
	return nil
}

// Ensuring interfaces in compile-time for PhotosDeletePhotosRequest.
var (
	_ bin.Encoder = &PhotosDeletePhotosRequest{}
	_ bin.Decoder = &PhotosDeletePhotosRequest{}
)

// PhotosDeletePhotos invokes method photos.deletePhotos#87cf7f2f returning error if any.
// Deletes profile photos.
//
// See https://core.telegram.org/method/photos.deletePhotos for reference.
func (c *Client) PhotosDeletePhotos(ctx context.Context, request *PhotosDeletePhotosRequest) ([]int64, error) {
	var result LongVector
	if err := c.rpc.InvokeRaw(ctx, request, &result); err != nil {
		return nil, err
	}
	return result.Elems, nil
}
