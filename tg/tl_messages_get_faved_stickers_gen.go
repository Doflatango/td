// Code generated by gotdgen, DO NOT EDIT.

package tg

import (
	"context"
	"fmt"

	"github.com/gotd/td/bin"
)

// No-op definition for keeping imports.
var _ = bin.Buffer{}
var _ = context.Background()
var _ = fmt.Stringer(nil)

// MessagesGetFavedStickersRequest represents TL type `messages.getFavedStickers#21ce0b0e`.
// Get faved stickers
//
// See https://core.telegram.org/method/messages.getFavedStickers for reference.
type MessagesGetFavedStickersRequest struct {
	// Hash for pagination, for more info click here
	Hash int
}

// MessagesGetFavedStickersRequestTypeID is TL type id of MessagesGetFavedStickersRequest.
const MessagesGetFavedStickersRequestTypeID = 0x21ce0b0e

// Encode implements bin.Encoder.
func (g *MessagesGetFavedStickersRequest) Encode(b *bin.Buffer) error {
	if g == nil {
		return fmt.Errorf("can't encode messages.getFavedStickers#21ce0b0e as nil")
	}
	b.PutID(MessagesGetFavedStickersRequestTypeID)
	b.PutInt(g.Hash)
	return nil
}

// Decode implements bin.Decoder.
func (g *MessagesGetFavedStickersRequest) Decode(b *bin.Buffer) error {
	if g == nil {
		return fmt.Errorf("can't decode messages.getFavedStickers#21ce0b0e to nil")
	}
	if err := b.ConsumeID(MessagesGetFavedStickersRequestTypeID); err != nil {
		return fmt.Errorf("unable to decode messages.getFavedStickers#21ce0b0e: %w", err)
	}

	{
		value, err := b.Int()
		if err != nil {
			return fmt.Errorf("unable to decode messages.getFavedStickers#21ce0b0e: field hash: %w", err)
		}
		g.Hash = value
	}
	return nil
}

// Ensuring interfaces in compile-time for MessagesGetFavedStickersRequest.
var (
	_ bin.Encoder = &MessagesGetFavedStickersRequest{}
	_ bin.Decoder = &MessagesGetFavedStickersRequest{}
)

// MessagesGetFavedStickers invokes method messages.getFavedStickers#21ce0b0e returning error if any.
// Get faved stickers
//
// See https://core.telegram.org/method/messages.getFavedStickers for reference.
func (c *Client) MessagesGetFavedStickers(ctx context.Context, request *MessagesGetFavedStickersRequest) (MessagesFavedStickersClass, error) {
	var result MessagesFavedStickersBox
	if err := c.rpc.InvokeRaw(ctx, request, &result); err != nil {
		return nil, err
	}
	return result.FavedStickers, nil
}
