// Code generated by gotdgen, DO NOT EDIT.

package tg

import (
	"context"
	"fmt"

	"github.com/gotd/td/bin"
)

// No-op definition for keeping imports.
var _ = bin.Buffer{}
var _ = context.Background()
var _ = fmt.Stringer(nil)

// UploadReuploadCdnFileRequest represents TL type `upload.reuploadCdnFile#9b2754a8`.
//
// See https://core.telegram.org/constructor/upload.reuploadCdnFile for reference.
type UploadReuploadCdnFileRequest struct {
	// FileToken field of UploadReuploadCdnFileRequest.
	FileToken []byte
	// RequestToken field of UploadReuploadCdnFileRequest.
	RequestToken []byte
}

// UploadReuploadCdnFileRequestTypeID is TL type id of UploadReuploadCdnFileRequest.
const UploadReuploadCdnFileRequestTypeID = 0x9b2754a8

// Encode implements bin.Encoder.
func (r *UploadReuploadCdnFileRequest) Encode(b *bin.Buffer) error {
	if r == nil {
		return fmt.Errorf("can't encode upload.reuploadCdnFile#9b2754a8 as nil")
	}
	b.PutID(UploadReuploadCdnFileRequestTypeID)
	b.PutBytes(r.FileToken)
	b.PutBytes(r.RequestToken)
	return nil
}

// Decode implements bin.Decoder.
func (r *UploadReuploadCdnFileRequest) Decode(b *bin.Buffer) error {
	if r == nil {
		return fmt.Errorf("can't decode upload.reuploadCdnFile#9b2754a8 to nil")
	}
	if err := b.ConsumeID(UploadReuploadCdnFileRequestTypeID); err != nil {
		return fmt.Errorf("unable to decode upload.reuploadCdnFile#9b2754a8: %w", err)
	}
	{
		value, err := b.Bytes()
		if err != nil {
			return fmt.Errorf("unable to decode upload.reuploadCdnFile#9b2754a8: field file_token: %w", err)
		}
		r.FileToken = value
	}
	{
		value, err := b.Bytes()
		if err != nil {
			return fmt.Errorf("unable to decode upload.reuploadCdnFile#9b2754a8: field request_token: %w", err)
		}
		r.RequestToken = value
	}
	return nil
}

// Ensuring interfaces in compile-time for UploadReuploadCdnFileRequest.
var (
	_ bin.Encoder = &UploadReuploadCdnFileRequest{}
	_ bin.Decoder = &UploadReuploadCdnFileRequest{}
)
