// Code generated by gotdgen, DO NOT EDIT.

package tg

import (
	"context"
	"fmt"

	"github.com/gotd/td/bin"
)

// No-op definition for keeping imports.
var _ = bin.Buffer{}
var _ = context.Background()
var _ = fmt.Stringer(nil)

// AccountGetGlobalPrivacySettingsRequest represents TL type `account.getGlobalPrivacySettings#eb2b4cf6`.
type AccountGetGlobalPrivacySettingsRequest struct {
}

// AccountGetGlobalPrivacySettingsRequestTypeID is TL type id of AccountGetGlobalPrivacySettingsRequest.
const AccountGetGlobalPrivacySettingsRequestTypeID = 0xeb2b4cf6

// Encode implements bin.Encoder.
func (g *AccountGetGlobalPrivacySettingsRequest) Encode(b *bin.Buffer) error {
	if g == nil {
		return fmt.Errorf("can't encode account.getGlobalPrivacySettings#eb2b4cf6 as nil")
	}
	b.PutID(AccountGetGlobalPrivacySettingsRequestTypeID)
	return nil
}

// Decode implements bin.Decoder.
func (g *AccountGetGlobalPrivacySettingsRequest) Decode(b *bin.Buffer) error {
	if g == nil {
		return fmt.Errorf("can't decode account.getGlobalPrivacySettings#eb2b4cf6 to nil")
	}
	if err := b.ConsumeID(AccountGetGlobalPrivacySettingsRequestTypeID); err != nil {
		return fmt.Errorf("unable to decode account.getGlobalPrivacySettings#eb2b4cf6: %w", err)
	}
	return nil
}

// Ensuring interfaces in compile-time for AccountGetGlobalPrivacySettingsRequest.
var (
	_ bin.Encoder = &AccountGetGlobalPrivacySettingsRequest{}
	_ bin.Decoder = &AccountGetGlobalPrivacySettingsRequest{}
)

// AccountGetGlobalPrivacySettings invokes method account.getGlobalPrivacySettings#eb2b4cf6 returning error if any.
func (c *Client) AccountGetGlobalPrivacySettings(ctx context.Context, request *AccountGetGlobalPrivacySettingsRequest) (*GlobalPrivacySettings, error) {
	var result GlobalPrivacySettings
	if err := c.rpc.InvokeRaw(ctx, request, &result); err != nil {
		return nil, err
	}
	return &result, nil
}
