// Code generated by gotdgen, DO NOT EDIT.

package tg

import (
	"context"
	"fmt"

	"github.com/gotd/td/bin"
)

// No-op definition for keeping imports.
var _ = bin.Buffer{}
var _ = context.Background()
var _ = fmt.Stringer(nil)

// MessagesGetRecentLocationsRequest represents TL type `messages.getRecentLocations#bbc45b09`.
// Get live location history of a certain user
//
// See https://core.telegram.org/method/messages.getRecentLocations for reference.
type MessagesGetRecentLocationsRequest struct {
	// User
	Peer InputPeerClass
	// Maximum number of results to return, see pagination
	Limit int
	// Hash for pagination, for more info click here
	Hash int
}

// MessagesGetRecentLocationsRequestTypeID is TL type id of MessagesGetRecentLocationsRequest.
const MessagesGetRecentLocationsRequestTypeID = 0xbbc45b09

// Encode implements bin.Encoder.
func (g *MessagesGetRecentLocationsRequest) Encode(b *bin.Buffer) error {
	if g == nil {
		return fmt.Errorf("can't encode messages.getRecentLocations#bbc45b09 as nil")
	}
	b.PutID(MessagesGetRecentLocationsRequestTypeID)
	if g.Peer == nil {
		return fmt.Errorf("unable to encode messages.getRecentLocations#bbc45b09: field peer is nil")
	}
	if err := g.Peer.Encode(b); err != nil {
		return fmt.Errorf("unable to encode messages.getRecentLocations#bbc45b09: field peer: %w", err)
	}
	b.PutInt(g.Limit)
	b.PutInt(g.Hash)
	return nil
}

// Decode implements bin.Decoder.
func (g *MessagesGetRecentLocationsRequest) Decode(b *bin.Buffer) error {
	if g == nil {
		return fmt.Errorf("can't decode messages.getRecentLocations#bbc45b09 to nil")
	}
	if err := b.ConsumeID(MessagesGetRecentLocationsRequestTypeID); err != nil {
		return fmt.Errorf("unable to decode messages.getRecentLocations#bbc45b09: %w", err)
	}
	{
		value, err := DecodeInputPeer(b)
		if err != nil {
			return fmt.Errorf("unable to decode messages.getRecentLocations#bbc45b09: field peer: %w", err)
		}
		g.Peer = value
	}
	{
		value, err := b.Int()
		if err != nil {
			return fmt.Errorf("unable to decode messages.getRecentLocations#bbc45b09: field limit: %w", err)
		}
		g.Limit = value
	}
	{
		value, err := b.Int()
		if err != nil {
			return fmt.Errorf("unable to decode messages.getRecentLocations#bbc45b09: field hash: %w", err)
		}
		g.Hash = value
	}
	return nil
}

// Ensuring interfaces in compile-time for MessagesGetRecentLocationsRequest.
var (
	_ bin.Encoder = &MessagesGetRecentLocationsRequest{}
	_ bin.Decoder = &MessagesGetRecentLocationsRequest{}
)

// MessagesGetRecentLocations invokes method messages.getRecentLocations#bbc45b09 returning error if any.
// Get live location history of a certain user
//
// See https://core.telegram.org/method/messages.getRecentLocations for reference.
func (c *Client) MessagesGetRecentLocations(ctx context.Context, request *MessagesGetRecentLocationsRequest) (MessagesMessagesClass, error) {
	var result MessagesMessagesBox

	if err := c.rpc.InvokeRaw(ctx, request, &result); err != nil {
		return nil, err
	}
	return result.Messages, nil
}
