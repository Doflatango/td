// Code generated by gotdgen, DO NOT EDIT.

package tg

import (
	"context"
	"fmt"

	"github.com/ernado/td/bin"
)

// No-op definition for keeping imports.
var _ = bin.Buffer{}
var _ = context.Background()
var _ = fmt.Stringer(nil)

// MessagesSendScreenshotNotificationRequest represents TL type `messages.sendScreenshotNotification#c97df020`.
type MessagesSendScreenshotNotificationRequest struct {
	// Peer field of MessagesSendScreenshotNotificationRequest.
	Peer InputPeerClass
	// ReplyToMsgID field of MessagesSendScreenshotNotificationRequest.
	ReplyToMsgID int
	// RandomID field of MessagesSendScreenshotNotificationRequest.
	RandomID int64
}

// MessagesSendScreenshotNotificationRequestTypeID is TL type id of MessagesSendScreenshotNotificationRequest.
const MessagesSendScreenshotNotificationRequestTypeID = 0xc97df020

// Encode implements bin.Encoder.
func (s *MessagesSendScreenshotNotificationRequest) Encode(b *bin.Buffer) error {
	if s == nil {
		return fmt.Errorf("can't encode messages.sendScreenshotNotification#c97df020 as nil")
	}
	b.PutID(MessagesSendScreenshotNotificationRequestTypeID)
	if s.Peer == nil {
		return fmt.Errorf("unable to encode messages.sendScreenshotNotification#c97df020: field peer is nil")
	}
	if err := s.Peer.Encode(b); err != nil {
		return fmt.Errorf("unable to encode messages.sendScreenshotNotification#c97df020: field peer: %w", err)
	}
	b.PutInt(s.ReplyToMsgID)
	b.PutLong(s.RandomID)
	return nil
}

// Decode implements bin.Decoder.
func (s *MessagesSendScreenshotNotificationRequest) Decode(b *bin.Buffer) error {
	if s == nil {
		return fmt.Errorf("can't decode messages.sendScreenshotNotification#c97df020 to nil")
	}
	if err := b.ConsumeID(MessagesSendScreenshotNotificationRequestTypeID); err != nil {
		return fmt.Errorf("unable to decode messages.sendScreenshotNotification#c97df020: %w", err)
	}
	{
		value, err := DecodeInputPeer(b)
		if err != nil {
			return fmt.Errorf("unable to decode messages.sendScreenshotNotification#c97df020: field peer: %w", err)
		}
		s.Peer = value
	}
	{
		value, err := b.Int()
		if err != nil {
			return fmt.Errorf("unable to decode messages.sendScreenshotNotification#c97df020: field reply_to_msg_id: %w", err)
		}
		s.ReplyToMsgID = value
	}
	{
		value, err := b.Long()
		if err != nil {
			return fmt.Errorf("unable to decode messages.sendScreenshotNotification#c97df020: field random_id: %w", err)
		}
		s.RandomID = value
	}
	return nil
}

// Ensuring interfaces in compile-time for MessagesSendScreenshotNotificationRequest.
var (
	_ bin.Encoder = &MessagesSendScreenshotNotificationRequest{}
	_ bin.Decoder = &MessagesSendScreenshotNotificationRequest{}
)
