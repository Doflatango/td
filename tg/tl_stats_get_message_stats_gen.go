// Code generated by gotdgen, DO NOT EDIT.

package tg

import (
	"context"
	"fmt"

	"github.com/ernado/td/bin"
)

// No-op definition for keeping imports.
var _ = bin.Buffer{}
var _ = context.Background()
var _ = fmt.Stringer(nil)

// StatsGetMessageStatsRequest represents TL type `stats.getMessageStats#b6e0a3f5`.
type StatsGetMessageStatsRequest struct {
	// Flags field of StatsGetMessageStatsRequest.
	Flags bin.Fields
	// Dark field of StatsGetMessageStatsRequest.
	Dark bool
	// Channel field of StatsGetMessageStatsRequest.
	Channel InputChannelClass
	// MsgID field of StatsGetMessageStatsRequest.
	MsgID int
}

// StatsGetMessageStatsRequestTypeID is TL type id of StatsGetMessageStatsRequest.
const StatsGetMessageStatsRequestTypeID = 0xb6e0a3f5

// Encode implements bin.Encoder.
func (g *StatsGetMessageStatsRequest) Encode(b *bin.Buffer) error {
	if g == nil {
		return fmt.Errorf("can't encode stats.getMessageStats#b6e0a3f5 as nil")
	}
	b.PutID(StatsGetMessageStatsRequestTypeID)
	if err := g.Flags.Encode(b); err != nil {
		return fmt.Errorf("unable to encode stats.getMessageStats#b6e0a3f5: field flags: %w", err)
	}
	if g.Channel == nil {
		return fmt.Errorf("unable to encode stats.getMessageStats#b6e0a3f5: field channel is nil")
	}
	if err := g.Channel.Encode(b); err != nil {
		return fmt.Errorf("unable to encode stats.getMessageStats#b6e0a3f5: field channel: %w", err)
	}
	b.PutInt(g.MsgID)
	return nil
}

// SetDark sets value of Dark conditional field.
func (g *StatsGetMessageStatsRequest) SetDark(value bool) {
	if value {
		g.Flags.Set(0)
	} else {
		g.Flags.Unset(0)
	}
}

// Decode implements bin.Decoder.
func (g *StatsGetMessageStatsRequest) Decode(b *bin.Buffer) error {
	if g == nil {
		return fmt.Errorf("can't decode stats.getMessageStats#b6e0a3f5 to nil")
	}
	if err := b.ConsumeID(StatsGetMessageStatsRequestTypeID); err != nil {
		return fmt.Errorf("unable to decode stats.getMessageStats#b6e0a3f5: %w", err)
	}
	{
		if err := g.Flags.Decode(b); err != nil {
			return fmt.Errorf("unable to decode stats.getMessageStats#b6e0a3f5: field flags: %w", err)
		}
	}
	g.Dark = g.Flags.Has(0)
	{
		value, err := DecodeInputChannel(b)
		if err != nil {
			return fmt.Errorf("unable to decode stats.getMessageStats#b6e0a3f5: field channel: %w", err)
		}
		g.Channel = value
	}
	{
		value, err := b.Int()
		if err != nil {
			return fmt.Errorf("unable to decode stats.getMessageStats#b6e0a3f5: field msg_id: %w", err)
		}
		g.MsgID = value
	}
	return nil
}

// Ensuring interfaces in compile-time for StatsGetMessageStatsRequest.
var (
	_ bin.Encoder = &StatsGetMessageStatsRequest{}
	_ bin.Decoder = &StatsGetMessageStatsRequest{}
)
