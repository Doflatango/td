// Code generated by gotdgen, DO NOT EDIT.

package tg

import (
	"context"
	"fmt"

	"github.com/gotd/td/bin"
)

// No-op definition for keeping imports.
var _ = bin.Buffer{}
var _ = context.Background()
var _ = fmt.Stringer(nil)

// AccountTakeout represents TL type `account.takeout#4dba4501`.
//
// See https://core.telegram.org/constructor/account.takeout for reference.
type AccountTakeout struct {
	// ID field of AccountTakeout.
	ID int64
}

// AccountTakeoutTypeID is TL type id of AccountTakeout.
const AccountTakeoutTypeID = 0x4dba4501

// Encode implements bin.Encoder.
func (t *AccountTakeout) Encode(b *bin.Buffer) error {
	if t == nil {
		return fmt.Errorf("can't encode account.takeout#4dba4501 as nil")
	}
	b.PutID(AccountTakeoutTypeID)
	b.PutLong(t.ID)
	return nil
}

// Decode implements bin.Decoder.
func (t *AccountTakeout) Decode(b *bin.Buffer) error {
	if t == nil {
		return fmt.Errorf("can't decode account.takeout#4dba4501 to nil")
	}
	if err := b.ConsumeID(AccountTakeoutTypeID); err != nil {
		return fmt.Errorf("unable to decode account.takeout#4dba4501: %w", err)
	}
	{
		value, err := b.Long()
		if err != nil {
			return fmt.Errorf("unable to decode account.takeout#4dba4501: field id: %w", err)
		}
		t.ID = value
	}
	return nil
}

// Ensuring interfaces in compile-time for AccountTakeout.
var (
	_ bin.Encoder = &AccountTakeout{}
	_ bin.Decoder = &AccountTakeout{}
)
