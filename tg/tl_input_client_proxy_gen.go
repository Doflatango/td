// Code generated by gotdgen, DO NOT EDIT.

package tg

import (
	"context"
	"fmt"

	"github.com/gotd/td/bin"
)

// No-op definition for keeping imports.
var _ = bin.Buffer{}
var _ = context.Background()
var _ = fmt.Stringer(nil)

// InputClientProxy represents TL type `inputClientProxy#75588b3f`.
//
// See https://core.telegram.org/constructor/inputClientProxy for reference.
type InputClientProxy struct {
	// Address field of InputClientProxy.
	Address string
	// Port field of InputClientProxy.
	Port int
}

// InputClientProxyTypeID is TL type id of InputClientProxy.
const InputClientProxyTypeID = 0x75588b3f

// Encode implements bin.Encoder.
func (i *InputClientProxy) Encode(b *bin.Buffer) error {
	if i == nil {
		return fmt.Errorf("can't encode inputClientProxy#75588b3f as nil")
	}
	b.PutID(InputClientProxyTypeID)
	b.PutString(i.Address)
	b.PutInt(i.Port)
	return nil
}

// Decode implements bin.Decoder.
func (i *InputClientProxy) Decode(b *bin.Buffer) error {
	if i == nil {
		return fmt.Errorf("can't decode inputClientProxy#75588b3f to nil")
	}
	if err := b.ConsumeID(InputClientProxyTypeID); err != nil {
		return fmt.Errorf("unable to decode inputClientProxy#75588b3f: %w", err)
	}
	{
		value, err := b.String()
		if err != nil {
			return fmt.Errorf("unable to decode inputClientProxy#75588b3f: field address: %w", err)
		}
		i.Address = value
	}
	{
		value, err := b.Int()
		if err != nil {
			return fmt.Errorf("unable to decode inputClientProxy#75588b3f: field port: %w", err)
		}
		i.Port = value
	}
	return nil
}

// Ensuring interfaces in compile-time for InputClientProxy.
var (
	_ bin.Encoder = &InputClientProxy{}
	_ bin.Decoder = &InputClientProxy{}
)
