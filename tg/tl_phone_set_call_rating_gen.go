// Code generated by gotdgen, DO NOT EDIT.

package tg

import (
	"context"
	"fmt"
	"strings"

	"github.com/gotd/td/bin"
)

// No-op definition for keeping imports.
var _ = bin.Buffer{}
var _ = context.Background()
var _ = fmt.Stringer(nil)
var _ = strings.Builder{}

// PhoneSetCallRatingRequest represents TL type `phone.setCallRating#59ead627`.
// Rate a call
//
// See https://core.telegram.org/method/phone.setCallRating for reference.
type PhoneSetCallRatingRequest struct {
	// Flags, see TL conditional fieldsÂ¹
	//
	// Links:
	//  1) https://core.telegram.org/mtproto/TL-combinators#conditional-fields
	Flags bin.Fields
	// Whether the user decided on their own initiative to rate the call
	UserInitiative bool
	// The call to rate
	Peer InputPhoneCall
	// Rating in 1-5 stars
	Rating int
	// An additional comment
	Comment string
}

// PhoneSetCallRatingRequestTypeID is TL type id of PhoneSetCallRatingRequest.
const PhoneSetCallRatingRequestTypeID = 0x59ead627

// String implements fmt.Stringer.
func (s *PhoneSetCallRatingRequest) String() string {
	if s == nil {
		return "PhoneSetCallRatingRequest(nil)"
	}
	var sb strings.Builder
	sb.WriteString("PhoneSetCallRatingRequest")
	sb.WriteString("{\n")
	sb.WriteString("\tFlags: ")
	sb.WriteString(s.Flags.String())
	sb.WriteString(",\n")
	sb.WriteString("\tPeer: ")
	sb.WriteString(s.Peer.String())
	sb.WriteString(",\n")
	sb.WriteString("\tRating: ")
	sb.WriteString(fmt.Sprint(s.Rating))
	sb.WriteString(",\n")
	sb.WriteString("\tComment: ")
	sb.WriteString(fmt.Sprint(s.Comment))
	sb.WriteString(",\n")
	sb.WriteString("}")
	return sb.String()
}

// Encode implements bin.Encoder.
func (s *PhoneSetCallRatingRequest) Encode(b *bin.Buffer) error {
	if s == nil {
		return fmt.Errorf("can't encode phone.setCallRating#59ead627 as nil")
	}
	b.PutID(PhoneSetCallRatingRequestTypeID)
	if err := s.Flags.Encode(b); err != nil {
		return fmt.Errorf("unable to encode phone.setCallRating#59ead627: field flags: %w", err)
	}
	if err := s.Peer.Encode(b); err != nil {
		return fmt.Errorf("unable to encode phone.setCallRating#59ead627: field peer: %w", err)
	}
	b.PutInt(s.Rating)
	b.PutString(s.Comment)
	return nil
}

// SetUserInitiative sets value of UserInitiative conditional field.
func (s *PhoneSetCallRatingRequest) SetUserInitiative(value bool) {
	if value {
		s.Flags.Set(0)
		s.UserInitiative = true
	} else {
		s.Flags.Unset(0)
		s.UserInitiative = false
	}
}

// Decode implements bin.Decoder.
func (s *PhoneSetCallRatingRequest) Decode(b *bin.Buffer) error {
	if s == nil {
		return fmt.Errorf("can't decode phone.setCallRating#59ead627 to nil")
	}
	if err := b.ConsumeID(PhoneSetCallRatingRequestTypeID); err != nil {
		return fmt.Errorf("unable to decode phone.setCallRating#59ead627: %w", err)
	}
	{
		if err := s.Flags.Decode(b); err != nil {
			return fmt.Errorf("unable to decode phone.setCallRating#59ead627: field flags: %w", err)
		}
	}
	s.UserInitiative = s.Flags.Has(0)
	{
		if err := s.Peer.Decode(b); err != nil {
			return fmt.Errorf("unable to decode phone.setCallRating#59ead627: field peer: %w", err)
		}
	}
	{
		value, err := b.Int()
		if err != nil {
			return fmt.Errorf("unable to decode phone.setCallRating#59ead627: field rating: %w", err)
		}
		s.Rating = value
	}
	{
		value, err := b.String()
		if err != nil {
			return fmt.Errorf("unable to decode phone.setCallRating#59ead627: field comment: %w", err)
		}
		s.Comment = value
	}
	return nil
}

// Ensuring interfaces in compile-time for PhoneSetCallRatingRequest.
var (
	_ bin.Encoder = &PhoneSetCallRatingRequest{}
	_ bin.Decoder = &PhoneSetCallRatingRequest{}
)

// PhoneSetCallRating invokes method phone.setCallRating#59ead627 returning error if any.
// Rate a call
//
// See https://core.telegram.org/method/phone.setCallRating for reference.
func (c *Client) PhoneSetCallRating(ctx context.Context, request *PhoneSetCallRatingRequest) (UpdatesClass, error) {
	var result UpdatesBox

	if err := c.rpc.InvokeRaw(ctx, request, &result); err != nil {
		return nil, err
	}
	return result.Updates, nil
}
