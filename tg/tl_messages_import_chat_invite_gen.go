// Code generated by gotdgen, DO NOT EDIT.

package tg

import (
	"context"
	"fmt"

	"github.com/gotd/td/bin"
)

// No-op definition for keeping imports.
var _ = bin.Buffer{}
var _ = context.Background()
var _ = fmt.Stringer(nil)

// MessagesImportChatInviteRequest represents TL type `messages.importChatInvite#6c50051c`.
// Import a chat invite and join a private chat/supergroup/channel
//
// See https://core.telegram.org/method/messages.importChatInvite for reference.
type MessagesImportChatInviteRequest struct {
	// hash from t.me/joinchat/hash
	Hash string
}

// MessagesImportChatInviteRequestTypeID is TL type id of MessagesImportChatInviteRequest.
const MessagesImportChatInviteRequestTypeID = 0x6c50051c

// Encode implements bin.Encoder.
func (i *MessagesImportChatInviteRequest) Encode(b *bin.Buffer) error {
	if i == nil {
		return fmt.Errorf("can't encode messages.importChatInvite#6c50051c as nil")
	}
	b.PutID(MessagesImportChatInviteRequestTypeID)
	b.PutString(i.Hash)
	return nil
}

// Decode implements bin.Decoder.
func (i *MessagesImportChatInviteRequest) Decode(b *bin.Buffer) error {
	if i == nil {
		return fmt.Errorf("can't decode messages.importChatInvite#6c50051c to nil")
	}
	if err := b.ConsumeID(MessagesImportChatInviteRequestTypeID); err != nil {
		return fmt.Errorf("unable to decode messages.importChatInvite#6c50051c: %w", err)
	}
	{
		value, err := b.String()
		if err != nil {
			return fmt.Errorf("unable to decode messages.importChatInvite#6c50051c: field hash: %w", err)
		}
		i.Hash = value
	}
	return nil
}

// Ensuring interfaces in compile-time for MessagesImportChatInviteRequest.
var (
	_ bin.Encoder = &MessagesImportChatInviteRequest{}
	_ bin.Decoder = &MessagesImportChatInviteRequest{}
)

// MessagesImportChatInvite invokes method messages.importChatInvite#6c50051c returning error if any.
// Import a chat invite and join a private chat/supergroup/channel
//
// See https://core.telegram.org/method/messages.importChatInvite for reference.
func (c *Client) MessagesImportChatInvite(ctx context.Context, request *MessagesImportChatInviteRequest) (UpdatesClass, error) {
	var result UpdatesBox
	if err := c.rpc.InvokeRaw(ctx, request, &result); err != nil {
		return nil, err
	}
	return result.Updates, nil
}
