// Code generated by gotdgen, DO NOT EDIT.

package tg

import (
	"context"
	"fmt"

	"github.com/gotd/td/bin"
)

// No-op definition for keeping imports.
var _ = bin.Buffer{}
var _ = context.Background()
var _ = fmt.Stringer(nil)

// PhoneRequestCallRequest represents TL type `phone.requestCall#42ff96ed`.
// Start a telegram phone call
//
// See https://core.telegram.org/method/phone.requestCall for reference.
type PhoneRequestCallRequest struct {
	// Flags, see TL conditional fields
	Flags bin.Fields
	// Whether to start a video call
	Video bool
	// Destination of the phone call
	UserID InputUserClass
	// Random ID to avoid resending the same object
	RandomID int
	// Parameter for E2E encryption key exchange Â»
	GAHash []byte
	// Phone call settings
	Protocol PhoneCallProtocol
}

// PhoneRequestCallRequestTypeID is TL type id of PhoneRequestCallRequest.
const PhoneRequestCallRequestTypeID = 0x42ff96ed

// Encode implements bin.Encoder.
func (r *PhoneRequestCallRequest) Encode(b *bin.Buffer) error {
	if r == nil {
		return fmt.Errorf("can't encode phone.requestCall#42ff96ed as nil")
	}
	b.PutID(PhoneRequestCallRequestTypeID)
	if err := r.Flags.Encode(b); err != nil {
		return fmt.Errorf("unable to encode phone.requestCall#42ff96ed: field flags: %w", err)
	}
	if r.UserID == nil {
		return fmt.Errorf("unable to encode phone.requestCall#42ff96ed: field user_id is nil")
	}
	if err := r.UserID.Encode(b); err != nil {
		return fmt.Errorf("unable to encode phone.requestCall#42ff96ed: field user_id: %w", err)
	}
	b.PutInt(r.RandomID)
	b.PutBytes(r.GAHash)
	if err := r.Protocol.Encode(b); err != nil {
		return fmt.Errorf("unable to encode phone.requestCall#42ff96ed: field protocol: %w", err)
	}
	return nil
}

// SetVideo sets value of Video conditional field.
func (r *PhoneRequestCallRequest) SetVideo(value bool) {
	if value {
		r.Flags.Set(0)
	} else {
		r.Flags.Unset(0)
	}
}

// Decode implements bin.Decoder.
func (r *PhoneRequestCallRequest) Decode(b *bin.Buffer) error {
	if r == nil {
		return fmt.Errorf("can't decode phone.requestCall#42ff96ed to nil")
	}
	if err := b.ConsumeID(PhoneRequestCallRequestTypeID); err != nil {
		return fmt.Errorf("unable to decode phone.requestCall#42ff96ed: %w", err)
	}
	{
		if err := r.Flags.Decode(b); err != nil {
			return fmt.Errorf("unable to decode phone.requestCall#42ff96ed: field flags: %w", err)
		}
	}
	r.Video = r.Flags.Has(0)
	{
		value, err := DecodeInputUser(b)
		if err != nil {
			return fmt.Errorf("unable to decode phone.requestCall#42ff96ed: field user_id: %w", err)
		}
		r.UserID = value
	}
	{
		value, err := b.Int()
		if err != nil {
			return fmt.Errorf("unable to decode phone.requestCall#42ff96ed: field random_id: %w", err)
		}
		r.RandomID = value
	}
	{
		value, err := b.Bytes()
		if err != nil {
			return fmt.Errorf("unable to decode phone.requestCall#42ff96ed: field g_a_hash: %w", err)
		}
		r.GAHash = value
	}
	{
		if err := r.Protocol.Decode(b); err != nil {
			return fmt.Errorf("unable to decode phone.requestCall#42ff96ed: field protocol: %w", err)
		}
	}
	return nil
}

// Ensuring interfaces in compile-time for PhoneRequestCallRequest.
var (
	_ bin.Encoder = &PhoneRequestCallRequest{}
	_ bin.Decoder = &PhoneRequestCallRequest{}
)

// PhoneRequestCall invokes method phone.requestCall#42ff96ed returning error if any.
// Start a telegram phone call
//
// See https://core.telegram.org/method/phone.requestCall for reference.
func (c *Client) PhoneRequestCall(ctx context.Context, request *PhoneRequestCallRequest) (*PhonePhoneCall, error) {
	var result PhonePhoneCall

	if err := c.rpc.InvokeRaw(ctx, request, &result); err != nil {
		return nil, err
	}
	return &result, nil
}
