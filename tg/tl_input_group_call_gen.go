// Code generated by gotdgen, DO NOT EDIT.

package tg

import (
	"context"
	"fmt"
	"strings"

	"github.com/gotd/td/bin"
)

// No-op definition for keeping imports.
var _ = bin.Buffer{}
var _ = context.Background()
var _ = fmt.Stringer(nil)
var _ = strings.Builder{}

// InputGroupCall represents TL type `inputGroupCall#d8aa840f`.
//
// See https://core.telegram.org/constructor/inputGroupCall for reference.
type InputGroupCall struct {
	// ID field of InputGroupCall.
	ID int64
	// AccessHash field of InputGroupCall.
	AccessHash int64
}

// InputGroupCallTypeID is TL type id of InputGroupCall.
const InputGroupCallTypeID = 0xd8aa840f

func (i *InputGroupCall) Zero() bool {
	if i == nil {
		return true
	}
	if !(i.ID == 0) {
		return false
	}
	if !(i.AccessHash == 0) {
		return false
	}

	return true
}

// String implements fmt.Stringer.
func (i *InputGroupCall) String() string {
	if i == nil {
		return "InputGroupCall(nil)"
	}
	var sb strings.Builder
	sb.WriteString("InputGroupCall")
	sb.WriteString("{\n")
	sb.WriteString("\tID: ")
	sb.WriteString(fmt.Sprint(i.ID))
	sb.WriteString(",\n")
	sb.WriteString("\tAccessHash: ")
	sb.WriteString(fmt.Sprint(i.AccessHash))
	sb.WriteString(",\n")
	sb.WriteString("}")
	return sb.String()
}

// Encode implements bin.Encoder.
func (i *InputGroupCall) Encode(b *bin.Buffer) error {
	if i == nil {
		return fmt.Errorf("can't encode inputGroupCall#d8aa840f as nil")
	}
	b.PutID(InputGroupCallTypeID)
	b.PutLong(i.ID)
	b.PutLong(i.AccessHash)
	return nil
}

// Decode implements bin.Decoder.
func (i *InputGroupCall) Decode(b *bin.Buffer) error {
	if i == nil {
		return fmt.Errorf("can't decode inputGroupCall#d8aa840f to nil")
	}
	if err := b.ConsumeID(InputGroupCallTypeID); err != nil {
		return fmt.Errorf("unable to decode inputGroupCall#d8aa840f: %w", err)
	}
	{
		value, err := b.Long()
		if err != nil {
			return fmt.Errorf("unable to decode inputGroupCall#d8aa840f: field id: %w", err)
		}
		i.ID = value
	}
	{
		value, err := b.Long()
		if err != nil {
			return fmt.Errorf("unable to decode inputGroupCall#d8aa840f: field access_hash: %w", err)
		}
		i.AccessHash = value
	}
	return nil
}

// Ensuring interfaces in compile-time for InputGroupCall.
var (
	_ bin.Encoder = &InputGroupCall{}
	_ bin.Decoder = &InputGroupCall{}
)
