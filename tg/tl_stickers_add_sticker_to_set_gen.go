// Code generated by gotdgen, DO NOT EDIT.

package tg

import (
	"context"
	"fmt"

	"github.com/ernado/td/bin"
)

// No-op definition for keeping imports.
var _ = bin.Buffer{}
var _ = context.Background()
var _ = fmt.Stringer(nil)

// StickersAddStickerToSetRequest represents TL type `stickers.addStickerToSet#8653febe`.
type StickersAddStickerToSetRequest struct {
	// Stickerset field of StickersAddStickerToSetRequest.
	Stickerset InputStickerSetClass
	// Sticker field of StickersAddStickerToSetRequest.
	Sticker InputStickerSetItem
}

// StickersAddStickerToSetRequestTypeID is TL type id of StickersAddStickerToSetRequest.
const StickersAddStickerToSetRequestTypeID = 0x8653febe

// Encode implements bin.Encoder.
func (a *StickersAddStickerToSetRequest) Encode(b *bin.Buffer) error {
	if a == nil {
		return fmt.Errorf("can't encode stickers.addStickerToSet#8653febe as nil")
	}
	b.PutID(StickersAddStickerToSetRequestTypeID)
	if a.Stickerset == nil {
		return fmt.Errorf("unable to encode stickers.addStickerToSet#8653febe: field stickerset is nil")
	}
	if err := a.Stickerset.Encode(b); err != nil {
		return fmt.Errorf("unable to encode stickers.addStickerToSet#8653febe: field stickerset: %w", err)
	}
	if err := a.Sticker.Encode(b); err != nil {
		return fmt.Errorf("unable to encode stickers.addStickerToSet#8653febe: field sticker: %w", err)
	}
	return nil
}

// Decode implements bin.Decoder.
func (a *StickersAddStickerToSetRequest) Decode(b *bin.Buffer) error {
	if a == nil {
		return fmt.Errorf("can't decode stickers.addStickerToSet#8653febe to nil")
	}
	if err := b.ConsumeID(StickersAddStickerToSetRequestTypeID); err != nil {
		return fmt.Errorf("unable to decode stickers.addStickerToSet#8653febe: %w", err)
	}
	{
		value, err := DecodeInputStickerSet(b)
		if err != nil {
			return fmt.Errorf("unable to decode stickers.addStickerToSet#8653febe: field stickerset: %w", err)
		}
		a.Stickerset = value
	}
	{
		if err := a.Sticker.Decode(b); err != nil {
			return fmt.Errorf("unable to decode stickers.addStickerToSet#8653febe: field sticker: %w", err)
		}
	}
	return nil
}

// Ensuring interfaces in compile-time for StickersAddStickerToSetRequest.
var (
	_ bin.Encoder = &StickersAddStickerToSetRequest{}
	_ bin.Decoder = &StickersAddStickerToSetRequest{}
)
