// Code generated by gotdgen, DO NOT EDIT.

package tg

import (
	"context"
	"errors"
	"fmt"
	"sort"
	"strings"

	"github.com/gotd/td/bin"
)

// No-op definition for keeping imports.
var _ = bin.Buffer{}
var _ = context.Background()
var _ = fmt.Stringer(nil)
var _ = strings.Builder{}
var _ = errors.Is
var _ = sort.Ints

// PaymentSavedCredentialsCard represents TL type `paymentSavedCredentialsCard#cdc27a1f`.
// Saved credit card
//
// See https://core.telegram.org/constructor/paymentSavedCredentialsCard for reference.
type PaymentSavedCredentialsCard struct {
	// Card ID
	ID string `tl:"id"`
	// Title
	Title string `tl:"title"`
}

// PaymentSavedCredentialsCardTypeID is TL type id of PaymentSavedCredentialsCard.
const PaymentSavedCredentialsCardTypeID = 0xcdc27a1f

func (p *PaymentSavedCredentialsCard) Zero() bool {
	if p == nil {
		return true
	}
	if !(p.ID == "") {
		return false
	}
	if !(p.Title == "") {
		return false
	}

	return true
}

// String implements fmt.Stringer.
func (p *PaymentSavedCredentialsCard) String() string {
	if p == nil {
		return "PaymentSavedCredentialsCard(nil)"
	}
	type Alias PaymentSavedCredentialsCard
	return fmt.Sprintf("PaymentSavedCredentialsCard%+v", Alias(*p))
}

// FillFrom fills PaymentSavedCredentialsCard from given interface.
func (p *PaymentSavedCredentialsCard) FillFrom(from interface {
	GetID() (value string)
	GetTitle() (value string)
}) {
	p.ID = from.GetID()
	p.Title = from.GetTitle()
}

// TypeID returns type id in TL schema.
//
// See https://core.telegram.org/mtproto/TL-tl#remarks.
func (p *PaymentSavedCredentialsCard) TypeID() uint32 {
	return PaymentSavedCredentialsCardTypeID
}

// TypeName returns name of type in TL schema.
func (p *PaymentSavedCredentialsCard) TypeName() string {
	return "paymentSavedCredentialsCard"
}

// Encode implements bin.Encoder.
func (p *PaymentSavedCredentialsCard) Encode(b *bin.Buffer) error {
	if p == nil {
		return fmt.Errorf("can't encode paymentSavedCredentialsCard#cdc27a1f as nil")
	}
	b.PutID(PaymentSavedCredentialsCardTypeID)
	b.PutString(p.ID)
	b.PutString(p.Title)
	return nil
}

// GetID returns value of ID field.
func (p *PaymentSavedCredentialsCard) GetID() (value string) {
	return p.ID
}

// GetTitle returns value of Title field.
func (p *PaymentSavedCredentialsCard) GetTitle() (value string) {
	return p.Title
}

// Decode implements bin.Decoder.
func (p *PaymentSavedCredentialsCard) Decode(b *bin.Buffer) error {
	if p == nil {
		return fmt.Errorf("can't decode paymentSavedCredentialsCard#cdc27a1f to nil")
	}
	if err := b.ConsumeID(PaymentSavedCredentialsCardTypeID); err != nil {
		return fmt.Errorf("unable to decode paymentSavedCredentialsCard#cdc27a1f: %w", err)
	}
	{
		value, err := b.String()
		if err != nil {
			return fmt.Errorf("unable to decode paymentSavedCredentialsCard#cdc27a1f: field id: %w", err)
		}
		p.ID = value
	}
	{
		value, err := b.String()
		if err != nil {
			return fmt.Errorf("unable to decode paymentSavedCredentialsCard#cdc27a1f: field title: %w", err)
		}
		p.Title = value
	}
	return nil
}

// Ensuring interfaces in compile-time for PaymentSavedCredentialsCard.
var (
	_ bin.Encoder = &PaymentSavedCredentialsCard{}
	_ bin.Decoder = &PaymentSavedCredentialsCard{}
)
