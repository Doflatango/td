// Code generated by gotdgen, DO NOT EDIT.

package tg

import (
	"context"
	"fmt"
	"strings"

	"github.com/gotd/td/bin"
)

// No-op definition for keeping imports.
var _ = bin.Buffer{}
var _ = context.Background()
var _ = fmt.Stringer(nil)
var _ = strings.Builder{}

// LangpackGetLanguagesRequest represents TL type `langpack.getLanguages#42c6978f`.
// Get information about all languages in a localization pack
//
// See https://core.telegram.org/method/langpack.getLanguages for reference.
type LangpackGetLanguagesRequest struct {
	// Language pack
	LangPack string
}

// LangpackGetLanguagesRequestTypeID is TL type id of LangpackGetLanguagesRequest.
const LangpackGetLanguagesRequestTypeID = 0x42c6978f

// String implements fmt.Stringer.
func (g *LangpackGetLanguagesRequest) String() string {
	if g == nil {
		return "LangpackGetLanguagesRequest(nil)"
	}
	var sb strings.Builder
	sb.WriteString("LangpackGetLanguagesRequest")
	sb.WriteString("{\n")
	sb.WriteString("\tLangPack: ")
	sb.WriteString(fmt.Sprint(g.LangPack))
	sb.WriteString(",\n")
	sb.WriteString("}")
	return sb.String()
}

// Encode implements bin.Encoder.
func (g *LangpackGetLanguagesRequest) Encode(b *bin.Buffer) error {
	if g == nil {
		return fmt.Errorf("can't encode langpack.getLanguages#42c6978f as nil")
	}
	b.PutID(LangpackGetLanguagesRequestTypeID)
	b.PutString(g.LangPack)
	return nil
}

// Decode implements bin.Decoder.
func (g *LangpackGetLanguagesRequest) Decode(b *bin.Buffer) error {
	if g == nil {
		return fmt.Errorf("can't decode langpack.getLanguages#42c6978f to nil")
	}
	if err := b.ConsumeID(LangpackGetLanguagesRequestTypeID); err != nil {
		return fmt.Errorf("unable to decode langpack.getLanguages#42c6978f: %w", err)
	}
	{
		value, err := b.String()
		if err != nil {
			return fmt.Errorf("unable to decode langpack.getLanguages#42c6978f: field lang_pack: %w", err)
		}
		g.LangPack = value
	}
	return nil
}

// Ensuring interfaces in compile-time for LangpackGetLanguagesRequest.
var (
	_ bin.Encoder = &LangpackGetLanguagesRequest{}
	_ bin.Decoder = &LangpackGetLanguagesRequest{}
)

// LangpackGetLanguages invokes method langpack.getLanguages#42c6978f returning error if any.
// Get information about all languages in a localization pack
//
// Possible errors:
//  400 LANG_PACK_INVALID: The provided language pack is invalid
//
// See https://core.telegram.org/method/langpack.getLanguages for reference.
func (c *Client) LangpackGetLanguages(ctx context.Context, langpack string) ([]LangPackLanguage, error) {
	var result LangPackLanguageVector

	request := &LangpackGetLanguagesRequest{
		LangPack: langpack,
	}
	if err := c.rpc.InvokeRaw(ctx, request, &result); err != nil {
		return nil, err
	}
	return result.Elems, nil
}
