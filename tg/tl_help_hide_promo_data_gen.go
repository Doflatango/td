// Code generated by gotdgen, DO NOT EDIT.

package tg

import (
	"context"
	"errors"
	"fmt"
	"strings"

	"github.com/gotd/td/bin"
)

// No-op definition for keeping imports.
var _ = bin.Buffer{}
var _ = context.Background()
var _ = fmt.Stringer(nil)
var _ = strings.Builder{}
var _ = errors.Is

// HelpHidePromoDataRequest represents TL type `help.hidePromoData#1e251c95`.
// Hide MTProxy/Public Service Announcement information
//
// See https://core.telegram.org/method/help.hidePromoData for reference.
type HelpHidePromoDataRequest struct {
	// Peer to hide
	Peer InputPeerClass
}

// HelpHidePromoDataRequestTypeID is TL type id of HelpHidePromoDataRequest.
const HelpHidePromoDataRequestTypeID = 0x1e251c95

func (h *HelpHidePromoDataRequest) Zero() bool {
	if h == nil {
		return true
	}
	if !(h.Peer == nil) {
		return false
	}

	return true
}

// String implements fmt.Stringer.
func (h *HelpHidePromoDataRequest) String() string {
	if h == nil {
		return "HelpHidePromoDataRequest(nil)"
	}
	var sb strings.Builder
	sb.WriteString("HelpHidePromoDataRequest")
	sb.WriteString("{\n")
	sb.WriteString("\tPeer: ")
	sb.WriteString(fmt.Sprint(h.Peer))
	sb.WriteString(",\n")
	sb.WriteString("}")
	return sb.String()
}

// TypeID returns MTProto type id (CRC code).
// See https://core.telegram.org/mtproto/TL-tl#remarks.
func (h *HelpHidePromoDataRequest) TypeID() uint32 {
	return HelpHidePromoDataRequestTypeID
}

// Encode implements bin.Encoder.
func (h *HelpHidePromoDataRequest) Encode(b *bin.Buffer) error {
	if h == nil {
		return fmt.Errorf("can't encode help.hidePromoData#1e251c95 as nil")
	}
	b.PutID(HelpHidePromoDataRequestTypeID)
	if h.Peer == nil {
		return fmt.Errorf("unable to encode help.hidePromoData#1e251c95: field peer is nil")
	}
	if err := h.Peer.Encode(b); err != nil {
		return fmt.Errorf("unable to encode help.hidePromoData#1e251c95: field peer: %w", err)
	}
	return nil
}

// GetPeer returns value of Peer field.
func (h *HelpHidePromoDataRequest) GetPeer() (value InputPeerClass) {
	return h.Peer
}

// Decode implements bin.Decoder.
func (h *HelpHidePromoDataRequest) Decode(b *bin.Buffer) error {
	if h == nil {
		return fmt.Errorf("can't decode help.hidePromoData#1e251c95 to nil")
	}
	if err := b.ConsumeID(HelpHidePromoDataRequestTypeID); err != nil {
		return fmt.Errorf("unable to decode help.hidePromoData#1e251c95: %w", err)
	}
	{
		value, err := DecodeInputPeer(b)
		if err != nil {
			return fmt.Errorf("unable to decode help.hidePromoData#1e251c95: field peer: %w", err)
		}
		h.Peer = value
	}
	return nil
}

// Ensuring interfaces in compile-time for HelpHidePromoDataRequest.
var (
	_ bin.Encoder = &HelpHidePromoDataRequest{}
	_ bin.Decoder = &HelpHidePromoDataRequest{}
)

// HelpHidePromoData invokes method help.hidePromoData#1e251c95 returning error if any.
// Hide MTProxy/Public Service Announcement information
//
// See https://core.telegram.org/method/help.hidePromoData for reference.
// Can be used by bots.
func (c *Client) HelpHidePromoData(ctx context.Context, peer InputPeerClass) (bool, error) {
	var result BoolBox

	request := &HelpHidePromoDataRequest{
		Peer: peer,
	}
	if err := c.rpc.InvokeRaw(ctx, request, &result); err != nil {
		return false, err
	}
	_, ok := result.Bool.(*BoolTrue)
	return ok, nil
}
