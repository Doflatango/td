// Code generated by gotdgen, DO NOT EDIT.

package tg

import (
	"context"
	"errors"
	"fmt"
	"sort"
	"strings"

	"github.com/gotd/td/bin"
	"github.com/gotd/td/tdp"
)

// No-op definition for keeping imports.
var _ = bin.Buffer{}
var _ = context.Background()
var _ = fmt.Stringer(nil)
var _ = strings.Builder{}
var _ = errors.Is
var _ = sort.Ints
var _ = tdp.Format

// MessagesGetSuggestedDialogFiltersRequest represents TL type `messages.getSuggestedDialogFilters#a29cd42c`.
// Get suggested folders¹
//
// Links:
//  1) https://core.telegram.org/api/folders
//
// See https://core.telegram.org/method/messages.getSuggestedDialogFilters for reference.
type MessagesGetSuggestedDialogFiltersRequest struct {
}

// MessagesGetSuggestedDialogFiltersRequestTypeID is TL type id of MessagesGetSuggestedDialogFiltersRequest.
const MessagesGetSuggestedDialogFiltersRequestTypeID = 0xa29cd42c

func (g *MessagesGetSuggestedDialogFiltersRequest) Zero() bool {
	if g == nil {
		return true
	}

	return true
}

// String implements fmt.Stringer.
func (g *MessagesGetSuggestedDialogFiltersRequest) String() string {
	if g == nil {
		return "MessagesGetSuggestedDialogFiltersRequest(nil)"
	}
	type Alias MessagesGetSuggestedDialogFiltersRequest
	return fmt.Sprintf("MessagesGetSuggestedDialogFiltersRequest%+v", Alias(*g))
}

// TypeID returns type id in TL schema.
//
// See https://core.telegram.org/mtproto/TL-tl#remarks.
func (*MessagesGetSuggestedDialogFiltersRequest) TypeID() uint32 {
	return MessagesGetSuggestedDialogFiltersRequestTypeID
}

// TypeName returns name of type in TL schema.
func (*MessagesGetSuggestedDialogFiltersRequest) TypeName() string {
	return "messages.getSuggestedDialogFilters"
}

// TypeInfo returns info about TL type.
func (g *MessagesGetSuggestedDialogFiltersRequest) TypeInfo() tdp.Type {
	typ := tdp.Type{
		Name: "messages.getSuggestedDialogFilters",
		ID:   MessagesGetSuggestedDialogFiltersRequestTypeID,
	}
	if g == nil {
		typ.Null = true
		return typ
	}
	typ.Fields = []tdp.Field{}
	return typ
}

// Encode implements bin.Encoder.
func (g *MessagesGetSuggestedDialogFiltersRequest) Encode(b *bin.Buffer) error {
	if g == nil {
		return fmt.Errorf("can't encode messages.getSuggestedDialogFilters#a29cd42c as nil")
	}
	b.PutID(MessagesGetSuggestedDialogFiltersRequestTypeID)
	return nil
}

// Decode implements bin.Decoder.
func (g *MessagesGetSuggestedDialogFiltersRequest) Decode(b *bin.Buffer) error {
	if g == nil {
		return fmt.Errorf("can't decode messages.getSuggestedDialogFilters#a29cd42c to nil")
	}
	if err := b.ConsumeID(MessagesGetSuggestedDialogFiltersRequestTypeID); err != nil {
		return fmt.Errorf("unable to decode messages.getSuggestedDialogFilters#a29cd42c: %w", err)
	}
	return nil
}

// Ensuring interfaces in compile-time for MessagesGetSuggestedDialogFiltersRequest.
var (
	_ bin.Encoder = &MessagesGetSuggestedDialogFiltersRequest{}
	_ bin.Decoder = &MessagesGetSuggestedDialogFiltersRequest{}
)

// MessagesGetSuggestedDialogFilters invokes method messages.getSuggestedDialogFilters#a29cd42c returning error if any.
// Get suggested folders¹
//
// Links:
//  1) https://core.telegram.org/api/folders
//
// See https://core.telegram.org/method/messages.getSuggestedDialogFilters for reference.
func (c *Client) MessagesGetSuggestedDialogFilters(ctx context.Context) ([]DialogFilterSuggested, error) {
	var result DialogFilterSuggestedVector

	request := &MessagesGetSuggestedDialogFiltersRequest{}
	if err := c.rpc.InvokeRaw(ctx, request, &result); err != nil {
		return nil, err
	}
	return []DialogFilterSuggested(result.Elems), nil
}
