// Code generated by gotdgen, DO NOT EDIT.

package tg

import (
	"context"
	"fmt"
	"strings"

	"github.com/gotd/td/bin"
)

// No-op definition for keeping imports.
var _ = bin.Buffer{}
var _ = context.Background()
var _ = fmt.Stringer(nil)
var _ = strings.Builder{}

// MessagesGetOnlinesRequest represents TL type `messages.getOnlines#6e2be050`.
// Get count of online users in a chat
//
// See https://core.telegram.org/method/messages.getOnlines for reference.
type MessagesGetOnlinesRequest struct {
	// The chat
	Peer InputPeerClass
}

// MessagesGetOnlinesRequestTypeID is TL type id of MessagesGetOnlinesRequest.
const MessagesGetOnlinesRequestTypeID = 0x6e2be050

func (g *MessagesGetOnlinesRequest) Zero() bool {
	if g == nil {
		return true
	}
	if !(g.Peer == nil) {
		return false
	}

	return true
}

// String implements fmt.Stringer.
func (g *MessagesGetOnlinesRequest) String() string {
	if g == nil {
		return "MessagesGetOnlinesRequest(nil)"
	}
	var sb strings.Builder
	sb.WriteString("MessagesGetOnlinesRequest")
	sb.WriteString("{\n")
	sb.WriteString("\tPeer: ")
	sb.WriteString(fmt.Sprint(g.Peer))
	sb.WriteString(",\n")
	sb.WriteString("}")
	return sb.String()
}

// Encode implements bin.Encoder.
func (g *MessagesGetOnlinesRequest) Encode(b *bin.Buffer) error {
	if g == nil {
		return fmt.Errorf("can't encode messages.getOnlines#6e2be050 as nil")
	}
	b.PutID(MessagesGetOnlinesRequestTypeID)
	if g.Peer == nil {
		return fmt.Errorf("unable to encode messages.getOnlines#6e2be050: field peer is nil")
	}
	if err := g.Peer.Encode(b); err != nil {
		return fmt.Errorf("unable to encode messages.getOnlines#6e2be050: field peer: %w", err)
	}
	return nil
}

// Decode implements bin.Decoder.
func (g *MessagesGetOnlinesRequest) Decode(b *bin.Buffer) error {
	if g == nil {
		return fmt.Errorf("can't decode messages.getOnlines#6e2be050 to nil")
	}
	if err := b.ConsumeID(MessagesGetOnlinesRequestTypeID); err != nil {
		return fmt.Errorf("unable to decode messages.getOnlines#6e2be050: %w", err)
	}
	{
		value, err := DecodeInputPeer(b)
		if err != nil {
			return fmt.Errorf("unable to decode messages.getOnlines#6e2be050: field peer: %w", err)
		}
		g.Peer = value
	}
	return nil
}

// Ensuring interfaces in compile-time for MessagesGetOnlinesRequest.
var (
	_ bin.Encoder = &MessagesGetOnlinesRequest{}
	_ bin.Decoder = &MessagesGetOnlinesRequest{}
)

// MessagesGetOnlines invokes method messages.getOnlines#6e2be050 returning error if any.
// Get count of online users in a chat
//
// Possible errors:
//  400 CHANNEL_PRIVATE: You haven't joined this channel/supergroup
//  400 PEER_ID_INVALID: The provided peer id is invalid
//
// See https://core.telegram.org/method/messages.getOnlines for reference.
func (c *Client) MessagesGetOnlines(ctx context.Context, peer InputPeerClass) (*ChatOnlines, error) {
	var result ChatOnlines

	request := &MessagesGetOnlinesRequest{
		Peer: peer,
	}
	if err := c.rpc.InvokeRaw(ctx, request, &result); err != nil {
		return nil, err
	}
	return &result, nil
}
