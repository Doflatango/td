// Code generated by gotdgen, DO NOT EDIT.

package tg

import (
	"context"
	"fmt"

	"github.com/gotd/td/bin"
)

// No-op definition for keeping imports.
var _ = bin.Buffer{}
var _ = context.Background()
var _ = fmt.Stringer(nil)

// MessagesGetDocumentByHashRequest represents TL type `messages.getDocumentByHash#338e2464`.
// Get a document by its SHA256 hash, mainly used for gifs
//
// See https://core.telegram.org/method/messages.getDocumentByHash for reference.
type MessagesGetDocumentByHashRequest struct {
	// SHA256 of file
	Sha256 []byte
	// Size of the file in bytes
	Size int
	// Mime type
	MimeType string
}

// MessagesGetDocumentByHashRequestTypeID is TL type id of MessagesGetDocumentByHashRequest.
const MessagesGetDocumentByHashRequestTypeID = 0x338e2464

// Encode implements bin.Encoder.
func (g *MessagesGetDocumentByHashRequest) Encode(b *bin.Buffer) error {
	if g == nil {
		return fmt.Errorf("can't encode messages.getDocumentByHash#338e2464 as nil")
	}
	b.PutID(MessagesGetDocumentByHashRequestTypeID)
	b.PutBytes(g.Sha256)
	b.PutInt(g.Size)
	b.PutString(g.MimeType)
	return nil
}

// Decode implements bin.Decoder.
func (g *MessagesGetDocumentByHashRequest) Decode(b *bin.Buffer) error {
	if g == nil {
		return fmt.Errorf("can't decode messages.getDocumentByHash#338e2464 to nil")
	}
	if err := b.ConsumeID(MessagesGetDocumentByHashRequestTypeID); err != nil {
		return fmt.Errorf("unable to decode messages.getDocumentByHash#338e2464: %w", err)
	}
	{
		value, err := b.Bytes()
		if err != nil {
			return fmt.Errorf("unable to decode messages.getDocumentByHash#338e2464: field sha256: %w", err)
		}
		g.Sha256 = value
	}
	{
		value, err := b.Int()
		if err != nil {
			return fmt.Errorf("unable to decode messages.getDocumentByHash#338e2464: field size: %w", err)
		}
		g.Size = value
	}
	{
		value, err := b.String()
		if err != nil {
			return fmt.Errorf("unable to decode messages.getDocumentByHash#338e2464: field mime_type: %w", err)
		}
		g.MimeType = value
	}
	return nil
}

// Ensuring interfaces in compile-time for MessagesGetDocumentByHashRequest.
var (
	_ bin.Encoder = &MessagesGetDocumentByHashRequest{}
	_ bin.Decoder = &MessagesGetDocumentByHashRequest{}
)

// MessagesGetDocumentByHash invokes method messages.getDocumentByHash#338e2464 returning error if any.
// Get a document by its SHA256 hash, mainly used for gifs
//
// See https://core.telegram.org/method/messages.getDocumentByHash for reference.
func (c *Client) MessagesGetDocumentByHash(ctx context.Context, request *MessagesGetDocumentByHashRequest) (DocumentClass, error) {
	var result DocumentBox
	if err := c.rpc.InvokeRaw(ctx, request, &result); err != nil {
		return nil, err
	}
	return result.Document, nil
}
