// Code generated by gotdgen, DO NOT EDIT.

package tg

import (
	"context"
	"fmt"

	"github.com/gotd/td/bin"
)

// No-op definition for keeping imports.
var _ = bin.Buffer{}
var _ = context.Background()
var _ = fmt.Stringer(nil)

// AuthResetAuthorizationsRequest represents TL type `auth.resetAuthorizations#9fab0d1a`.
type AuthResetAuthorizationsRequest struct {
}

// AuthResetAuthorizationsRequestTypeID is TL type id of AuthResetAuthorizationsRequest.
const AuthResetAuthorizationsRequestTypeID = 0x9fab0d1a

// Encode implements bin.Encoder.
func (r *AuthResetAuthorizationsRequest) Encode(b *bin.Buffer) error {
	if r == nil {
		return fmt.Errorf("can't encode auth.resetAuthorizations#9fab0d1a as nil")
	}
	b.PutID(AuthResetAuthorizationsRequestTypeID)
	return nil
}

// Decode implements bin.Decoder.
func (r *AuthResetAuthorizationsRequest) Decode(b *bin.Buffer) error {
	if r == nil {
		return fmt.Errorf("can't decode auth.resetAuthorizations#9fab0d1a to nil")
	}
	if err := b.ConsumeID(AuthResetAuthorizationsRequestTypeID); err != nil {
		return fmt.Errorf("unable to decode auth.resetAuthorizations#9fab0d1a: %w", err)
	}
	return nil
}

// Ensuring interfaces in compile-time for AuthResetAuthorizationsRequest.
var (
	_ bin.Encoder = &AuthResetAuthorizationsRequest{}
	_ bin.Decoder = &AuthResetAuthorizationsRequest{}
)

// AuthResetAuthorizations invokes method auth.resetAuthorizations#9fab0d1a returning error if any.
func (c *Client) AuthResetAuthorizations(ctx context.Context, request *AuthResetAuthorizationsRequest) (BoolClass, error) {
	var result BoolBox
	if err := c.rpc.InvokeRaw(ctx, request, &result); err != nil {
		return nil, err
	}
	return result.Bool, nil
}
