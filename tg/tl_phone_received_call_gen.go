// Code generated by gotdgen, DO NOT EDIT.

package tg

import (
	"context"
	"fmt"

	"github.com/gotd/td/bin"
)

// No-op definition for keeping imports.
var _ = bin.Buffer{}
var _ = context.Background()
var _ = fmt.Stringer(nil)

// PhoneReceivedCallRequest represents TL type `phone.receivedCall#17d54f61`.
// Optional: notify the server that the user is currently busy in a call: this will automatically refuse all incoming phone calls until the current phone call is ended.
//
// See https://core.telegram.org/method/phone.receivedCall for reference.
type PhoneReceivedCallRequest struct {
	// The phone call we're currently in
	Peer InputPhoneCall
}

// PhoneReceivedCallRequestTypeID is TL type id of PhoneReceivedCallRequest.
const PhoneReceivedCallRequestTypeID = 0x17d54f61

// Encode implements bin.Encoder.
func (r *PhoneReceivedCallRequest) Encode(b *bin.Buffer) error {
	if r == nil {
		return fmt.Errorf("can't encode phone.receivedCall#17d54f61 as nil")
	}
	b.PutID(PhoneReceivedCallRequestTypeID)
	if err := r.Peer.Encode(b); err != nil {
		return fmt.Errorf("unable to encode phone.receivedCall#17d54f61: field peer: %w", err)
	}
	return nil
}

// Decode implements bin.Decoder.
func (r *PhoneReceivedCallRequest) Decode(b *bin.Buffer) error {
	if r == nil {
		return fmt.Errorf("can't decode phone.receivedCall#17d54f61 to nil")
	}
	if err := b.ConsumeID(PhoneReceivedCallRequestTypeID); err != nil {
		return fmt.Errorf("unable to decode phone.receivedCall#17d54f61: %w", err)
	}
	{
		if err := r.Peer.Decode(b); err != nil {
			return fmt.Errorf("unable to decode phone.receivedCall#17d54f61: field peer: %w", err)
		}
	}
	return nil
}

// Ensuring interfaces in compile-time for PhoneReceivedCallRequest.
var (
	_ bin.Encoder = &PhoneReceivedCallRequest{}
	_ bin.Decoder = &PhoneReceivedCallRequest{}
)

// PhoneReceivedCall invokes method phone.receivedCall#17d54f61 returning error if any.
// Optional: notify the server that the user is currently busy in a call: this will automatically refuse all incoming phone calls until the current phone call is ended.
//
// See https://core.telegram.org/method/phone.receivedCall for reference.
func (c *Client) PhoneReceivedCall(ctx context.Context, request *PhoneReceivedCallRequest) (BoolClass, error) {
	var result BoolBox
	if err := c.rpc.InvokeRaw(ctx, request, &result); err != nil {
		return nil, err
	}
	return result.Bool, nil
}
