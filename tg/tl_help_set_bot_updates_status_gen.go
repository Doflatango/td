// Code generated by gotdgen, DO NOT EDIT.

package tg

import (
	"context"
	"fmt"

	"github.com/gotd/td/bin"
)

// No-op definition for keeping imports.
var _ = bin.Buffer{}
var _ = context.Background()
var _ = fmt.Stringer(nil)

// HelpSetBotUpdatesStatusRequest represents TL type `help.setBotUpdatesStatus#ec22cfcd`.
// Informs the server about the number of pending bot updates if they haven't been processed for a long time; for bots only
//
// See https://core.telegram.org/method/help.setBotUpdatesStatus for reference.
type HelpSetBotUpdatesStatusRequest struct {
	// Number of pending updates
	PendingUpdatesCount int
	// Error message, if present
	Message string
}

// HelpSetBotUpdatesStatusRequestTypeID is TL type id of HelpSetBotUpdatesStatusRequest.
const HelpSetBotUpdatesStatusRequestTypeID = 0xec22cfcd

// Encode implements bin.Encoder.
func (s *HelpSetBotUpdatesStatusRequest) Encode(b *bin.Buffer) error {
	if s == nil {
		return fmt.Errorf("can't encode help.setBotUpdatesStatus#ec22cfcd as nil")
	}
	b.PutID(HelpSetBotUpdatesStatusRequestTypeID)
	b.PutInt(s.PendingUpdatesCount)
	b.PutString(s.Message)
	return nil
}

// Decode implements bin.Decoder.
func (s *HelpSetBotUpdatesStatusRequest) Decode(b *bin.Buffer) error {
	if s == nil {
		return fmt.Errorf("can't decode help.setBotUpdatesStatus#ec22cfcd to nil")
	}
	if err := b.ConsumeID(HelpSetBotUpdatesStatusRequestTypeID); err != nil {
		return fmt.Errorf("unable to decode help.setBotUpdatesStatus#ec22cfcd: %w", err)
	}

	{
		value, err := b.Int()
		if err != nil {
			return fmt.Errorf("unable to decode help.setBotUpdatesStatus#ec22cfcd: field pending_updates_count: %w", err)
		}
		s.PendingUpdatesCount = value
	}
	{
		value, err := b.String()
		if err != nil {
			return fmt.Errorf("unable to decode help.setBotUpdatesStatus#ec22cfcd: field message: %w", err)
		}
		s.Message = value
	}
	return nil
}

// Ensuring interfaces in compile-time for HelpSetBotUpdatesStatusRequest.
var (
	_ bin.Encoder = &HelpSetBotUpdatesStatusRequest{}
	_ bin.Decoder = &HelpSetBotUpdatesStatusRequest{}
)

// HelpSetBotUpdatesStatus invokes method help.setBotUpdatesStatus#ec22cfcd returning error if any.
// Informs the server about the number of pending bot updates if they haven't been processed for a long time; for bots only
//
// See https://core.telegram.org/method/help.setBotUpdatesStatus for reference.
func (c *Client) HelpSetBotUpdatesStatus(ctx context.Context, request *HelpSetBotUpdatesStatusRequest) (BoolClass, error) {
	var result BoolBox
	if err := c.rpc.InvokeRaw(ctx, request, &result); err != nil {
		return nil, err
	}
	return result.Bool, nil
}
