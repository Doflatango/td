// Code generated by gotdgen, DO NOT EDIT.

package tg

import (
	"context"
	"fmt"

	"github.com/gotd/td/bin"
)

// No-op definition for keeping imports.
var _ = bin.Buffer{}
var _ = context.Background()
var _ = fmt.Stringer(nil)

// ChatInviteEmpty represents TL type `chatInviteEmpty#69df3769`.
type ChatInviteEmpty struct {
}

// ChatInviteEmptyTypeID is TL type id of ChatInviteEmpty.
const ChatInviteEmptyTypeID = 0x69df3769

// Encode implements bin.Encoder.
func (c *ChatInviteEmpty) Encode(b *bin.Buffer) error {
	if c == nil {
		return fmt.Errorf("can't encode chatInviteEmpty#69df3769 as nil")
	}
	b.PutID(ChatInviteEmptyTypeID)
	return nil
}

// Decode implements bin.Decoder.
func (c *ChatInviteEmpty) Decode(b *bin.Buffer) error {
	if c == nil {
		return fmt.Errorf("can't decode chatInviteEmpty#69df3769 to nil")
	}
	if err := b.ConsumeID(ChatInviteEmptyTypeID); err != nil {
		return fmt.Errorf("unable to decode chatInviteEmpty#69df3769: %w", err)
	}
	return nil
}

// construct implements constructor of ExportedChatInviteClass.
func (c ChatInviteEmpty) construct() ExportedChatInviteClass { return &c }

// Ensuring interfaces in compile-time for ChatInviteEmpty.
var (
	_ bin.Encoder = &ChatInviteEmpty{}
	_ bin.Decoder = &ChatInviteEmpty{}

	_ ExportedChatInviteClass = &ChatInviteEmpty{}
)

// ChatInviteExported represents TL type `chatInviteExported#fc2e05bc`.
type ChatInviteExported struct {
	// Link field of ChatInviteExported.
	Link string
}

// ChatInviteExportedTypeID is TL type id of ChatInviteExported.
const ChatInviteExportedTypeID = 0xfc2e05bc

// Encode implements bin.Encoder.
func (c *ChatInviteExported) Encode(b *bin.Buffer) error {
	if c == nil {
		return fmt.Errorf("can't encode chatInviteExported#fc2e05bc as nil")
	}
	b.PutID(ChatInviteExportedTypeID)
	b.PutString(c.Link)
	return nil
}

// Decode implements bin.Decoder.
func (c *ChatInviteExported) Decode(b *bin.Buffer) error {
	if c == nil {
		return fmt.Errorf("can't decode chatInviteExported#fc2e05bc to nil")
	}
	if err := b.ConsumeID(ChatInviteExportedTypeID); err != nil {
		return fmt.Errorf("unable to decode chatInviteExported#fc2e05bc: %w", err)
	}
	{
		value, err := b.String()
		if err != nil {
			return fmt.Errorf("unable to decode chatInviteExported#fc2e05bc: field link: %w", err)
		}
		c.Link = value
	}
	return nil
}

// construct implements constructor of ExportedChatInviteClass.
func (c ChatInviteExported) construct() ExportedChatInviteClass { return &c }

// Ensuring interfaces in compile-time for ChatInviteExported.
var (
	_ bin.Encoder = &ChatInviteExported{}
	_ bin.Decoder = &ChatInviteExported{}

	_ ExportedChatInviteClass = &ChatInviteExported{}
)

// ExportedChatInviteClass represents ExportedChatInvite generic type.
//
// Example:
//  g, err := DecodeExportedChatInvite(buf)
//  if err != nil {
//      panic(err)
//  }
//  switch v := g.(type) {
//  case *ChatInviteEmpty: // chatInviteEmpty#69df3769
//  case *ChatInviteExported: // chatInviteExported#fc2e05bc
//  default: panic(v)
//  }
type ExportedChatInviteClass interface {
	bin.Encoder
	bin.Decoder
	construct() ExportedChatInviteClass
}

// DecodeExportedChatInvite implements binary de-serialization for ExportedChatInviteClass.
func DecodeExportedChatInvite(buf *bin.Buffer) (ExportedChatInviteClass, error) {
	id, err := buf.PeekID()
	if err != nil {
		return nil, err
	}
	switch id {
	case ChatInviteEmptyTypeID:
		// Decoding chatInviteEmpty#69df3769.
		v := ChatInviteEmpty{}
		if err := v.Decode(buf); err != nil {
			return nil, fmt.Errorf("unable to decode ExportedChatInviteClass: %w", err)
		}
		return &v, nil
	case ChatInviteExportedTypeID:
		// Decoding chatInviteExported#fc2e05bc.
		v := ChatInviteExported{}
		if err := v.Decode(buf); err != nil {
			return nil, fmt.Errorf("unable to decode ExportedChatInviteClass: %w", err)
		}
		return &v, nil
	default:
		return nil, fmt.Errorf("unable to decode ExportedChatInviteClass: %w", bin.NewUnexpectedID(id))
	}
}

// ExportedChatInvite boxes the ExportedChatInviteClass providing a helper.
type ExportedChatInviteBox struct {
	ExportedChatInvite ExportedChatInviteClass
}

// Decode implements bin.Decoder for ExportedChatInviteBox.
func (b *ExportedChatInviteBox) Decode(buf *bin.Buffer) error {
	if b == nil {
		return fmt.Errorf("unable to decode ExportedChatInviteBox to nil")
	}
	v, err := DecodeExportedChatInvite(buf)
	if err != nil {
		return fmt.Errorf("unable to decode boxed value: %w", err)
	}
	b.ExportedChatInvite = v
	return nil
}

// Encode implements bin.Encode for ExportedChatInviteBox.
func (b *ExportedChatInviteBox) Encode(buf *bin.Buffer) error {
	if b == nil || b.ExportedChatInvite == nil {
		return fmt.Errorf("unable to encode ExportedChatInviteClass as nil")
	}
	return b.ExportedChatInvite.Encode(buf)
}
