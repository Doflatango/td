// Code generated by gotdgen, DO NOT EDIT.

package tg

import (
	"context"
	"fmt"

	"github.com/ernado/td/bin"
)

// No-op definition for keeping imports.
var _ = bin.Buffer{}
var _ = context.Background()
var _ = fmt.Stringer(nil)

// MessagesEditChatPhotoRequest represents TL type `messages.editChatPhoto#ca4c79d8`.
type MessagesEditChatPhotoRequest struct {
	// ChatID field of MessagesEditChatPhotoRequest.
	ChatID int
	// Photo field of MessagesEditChatPhotoRequest.
	Photo InputChatPhotoClass
}

// MessagesEditChatPhotoRequestTypeID is TL type id of MessagesEditChatPhotoRequest.
const MessagesEditChatPhotoRequestTypeID = 0xca4c79d8

// Encode implements bin.Encoder.
func (e *MessagesEditChatPhotoRequest) Encode(b *bin.Buffer) error {
	if e == nil {
		return fmt.Errorf("can't encode messages.editChatPhoto#ca4c79d8 as nil")
	}
	b.PutID(MessagesEditChatPhotoRequestTypeID)
	b.PutInt(e.ChatID)
	if e.Photo == nil {
		return fmt.Errorf("unable to encode messages.editChatPhoto#ca4c79d8: field photo is nil")
	}
	if err := e.Photo.Encode(b); err != nil {
		return fmt.Errorf("unable to encode messages.editChatPhoto#ca4c79d8: field photo: %w", err)
	}
	return nil
}

// Decode implements bin.Decoder.
func (e *MessagesEditChatPhotoRequest) Decode(b *bin.Buffer) error {
	if e == nil {
		return fmt.Errorf("can't decode messages.editChatPhoto#ca4c79d8 to nil")
	}
	if err := b.ConsumeID(MessagesEditChatPhotoRequestTypeID); err != nil {
		return fmt.Errorf("unable to decode messages.editChatPhoto#ca4c79d8: %w", err)
	}
	{
		value, err := b.Int()
		if err != nil {
			return fmt.Errorf("unable to decode messages.editChatPhoto#ca4c79d8: field chat_id: %w", err)
		}
		e.ChatID = value
	}
	{
		value, err := DecodeInputChatPhoto(b)
		if err != nil {
			return fmt.Errorf("unable to decode messages.editChatPhoto#ca4c79d8: field photo: %w", err)
		}
		e.Photo = value
	}
	return nil
}

// Ensuring interfaces in compile-time for MessagesEditChatPhotoRequest.
var (
	_ bin.Encoder = &MessagesEditChatPhotoRequest{}
	_ bin.Decoder = &MessagesEditChatPhotoRequest{}
)
