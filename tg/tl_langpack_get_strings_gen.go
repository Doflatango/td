// Code generated by gotdgen, DO NOT EDIT.

package tg

import (
	"context"
	"fmt"

	"github.com/gotd/td/bin"
)

// No-op definition for keeping imports.
var _ = bin.Buffer{}
var _ = context.Background()
var _ = fmt.Stringer(nil)

// LangpackGetStringsRequest represents TL type `langpack.getStrings#efea3803`.
// Get strings from a language pack
//
// See https://core.telegram.org/method/langpack.getStrings for reference.
type LangpackGetStringsRequest struct {
	// Language pack name
	LangPack string
	// Language code
	LangCode string
	// Strings to get
	Keys []string
}

// LangpackGetStringsRequestTypeID is TL type id of LangpackGetStringsRequest.
const LangpackGetStringsRequestTypeID = 0xefea3803

// Encode implements bin.Encoder.
func (g *LangpackGetStringsRequest) Encode(b *bin.Buffer) error {
	if g == nil {
		return fmt.Errorf("can't encode langpack.getStrings#efea3803 as nil")
	}
	b.PutID(LangpackGetStringsRequestTypeID)
	b.PutString(g.LangPack)
	b.PutString(g.LangCode)
	b.PutVectorHeader(len(g.Keys))
	for _, v := range g.Keys {
		b.PutString(v)
	}
	return nil
}

// Decode implements bin.Decoder.
func (g *LangpackGetStringsRequest) Decode(b *bin.Buffer) error {
	if g == nil {
		return fmt.Errorf("can't decode langpack.getStrings#efea3803 to nil")
	}
	if err := b.ConsumeID(LangpackGetStringsRequestTypeID); err != nil {
		return fmt.Errorf("unable to decode langpack.getStrings#efea3803: %w", err)
	}

	{
		value, err := b.String()
		if err != nil {
			return fmt.Errorf("unable to decode langpack.getStrings#efea3803: field lang_pack: %w", err)
		}
		g.LangPack = value
	}
	{
		value, err := b.String()
		if err != nil {
			return fmt.Errorf("unable to decode langpack.getStrings#efea3803: field lang_code: %w", err)
		}
		g.LangCode = value
	}
	{
		headerLen, err := b.VectorHeader()
		if err != nil {
			return fmt.Errorf("unable to decode langpack.getStrings#efea3803: field keys: %w", err)
		}
		for idx := 0; idx < headerLen; idx++ {
			value, err := b.String()
			if err != nil {
				return fmt.Errorf("unable to decode langpack.getStrings#efea3803: field keys: %w", err)
			}
			g.Keys = append(g.Keys, value)
		}
	}
	return nil
}

// Ensuring interfaces in compile-time for LangpackGetStringsRequest.
var (
	_ bin.Encoder = &LangpackGetStringsRequest{}
	_ bin.Decoder = &LangpackGetStringsRequest{}
)

// LangpackGetStrings invokes method langpack.getStrings#efea3803 returning error if any.
// Get strings from a language pack
//
// See https://core.telegram.org/method/langpack.getStrings for reference.
func (c *Client) LangpackGetStrings(ctx context.Context, request *LangpackGetStringsRequest) (*LangPackStringClassVector, error) {
	var result LangPackStringClassVector
	if err := c.rpc.InvokeRaw(ctx, request, &result); err != nil {
		return nil, err
	}
	return &result, nil
}
